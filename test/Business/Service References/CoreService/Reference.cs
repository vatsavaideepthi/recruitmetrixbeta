//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Business.CoreService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseObjectNoProp", Namespace="http://schemas.datacontract.org/2004/07/MexServices")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Business.CoreService.Relation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Business.CoreService.BaseObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Business.CoreService.ResourceToken))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Business.CoreService.MyFolder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Business.CoreService.MyFile))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Business.CoreService.Message))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Business.CoreService.Mesage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Business.CoreService.Feed))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Business.CoreService.Invitation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Business.CoreService.GeneralMessage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Business.CoreService.MessageMaster))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Business.CoreService.MesageMaster))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Business.CoreService.FeedMaster))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Business.CoreService.InvitationMaster))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Business.CoreService.GeneralMessageMaster))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Business.CoreService.Content))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Business.CoreService.MList))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Business.CoreService.ActivityStream))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Business.CoreService.Comment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Business.CoreService.BaseUser))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Business.CoreService.Group))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Business.CoreService.User))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Business.CoreService.Friend))]
    public partial class BaseObjectNoProp : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AccessTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AppIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NetworkIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ObjectTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AccessTime {
            get {
                return this.AccessTimeField;
            }
            set {
                if ((this.AccessTimeField.Equals(value) != true)) {
                    this.AccessTimeField = value;
                    this.RaisePropertyChanged("AccessTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AppId {
            get {
                return this.AppIdField;
            }
            set {
                if ((object.ReferenceEquals(this.AppIdField, value) != true)) {
                    this.AppIdField = value;
                    this.RaisePropertyChanged("AppId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Deleted {
            get {
                return this.DeletedField;
            }
            set {
                if ((object.ReferenceEquals(this.DeletedField, value) != true)) {
                    this.DeletedField = value;
                    this.RaisePropertyChanged("Deleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedTime {
            get {
                return this.ModifiedTimeField;
            }
            set {
                if ((this.ModifiedTimeField.Equals(value) != true)) {
                    this.ModifiedTimeField = value;
                    this.RaisePropertyChanged("ModifiedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NetworkId {
            get {
                return this.NetworkIdField;
            }
            set {
                if ((object.ReferenceEquals(this.NetworkIdField, value) != true)) {
                    this.NetworkIdField = value;
                    this.RaisePropertyChanged("NetworkId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ObjectType {
            get {
                return this.ObjectTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjectTypeField, value) != true)) {
                    this.ObjectTypeField = value;
                    this.RaisePropertyChanged("ObjectType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnerId {
            get {
                return this.OwnerIdField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerIdField, value) != true)) {
                    this.OwnerIdField = value;
                    this.RaisePropertyChanged("OwnerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Relation", Namespace="http://schemas.datacontract.org/2004/07/MexServices")]
    [System.SerializableAttribute()]
    public partial class Relation : Business.CoreService.BaseObjectNoProp {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentId {
            get {
                return this.ParentIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentIdField, value) != true)) {
                    this.ParentIdField = value;
                    this.RaisePropertyChanged("ParentId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseObject", Namespace="http://schemas.datacontract.org/2004/07/MexServices")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Business.CoreService.ResourceToken))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Business.CoreService.MyFolder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Business.CoreService.MyFile))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Business.CoreService.Message))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Business.CoreService.Mesage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Business.CoreService.Feed))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Business.CoreService.Invitation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Business.CoreService.GeneralMessage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Business.CoreService.MessageMaster))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Business.CoreService.MesageMaster))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Business.CoreService.FeedMaster))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Business.CoreService.InvitationMaster))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Business.CoreService.GeneralMessageMaster))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Business.CoreService.Content))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Business.CoreService.MList))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Business.CoreService.ActivityStream))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Business.CoreService.Comment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Business.CoreService.BaseUser))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Business.CoreService.Group))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Business.CoreService.User))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Business.CoreService.Friend))]
    public partial class BaseObject : Business.CoreService.BaseObjectNoProp {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, string> PropertiesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, string> Properties {
            get {
                return this.PropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertiesField, value) != true)) {
                    this.PropertiesField = value;
                    this.RaisePropertyChanged("Properties");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResourceToken", Namespace="http://schemas.datacontract.org/2004/07/MexServices")]
    [System.SerializableAttribute()]
    public partial class ResourceToken : Business.CoreService.BaseObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilenameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StorageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Thumbnail1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Thumbnail2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Thumbnail3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Thumbnail4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContentId {
            get {
                return this.ContentIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentIdField, value) != true)) {
                    this.ContentIdField = value;
                    this.RaisePropertyChanged("ContentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Filename {
            get {
                return this.FilenameField;
            }
            set {
                if ((object.ReferenceEquals(this.FilenameField, value) != true)) {
                    this.FilenameField = value;
                    this.RaisePropertyChanged("Filename");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StorageId {
            get {
                return this.StorageIdField;
            }
            set {
                if ((object.ReferenceEquals(this.StorageIdField, value) != true)) {
                    this.StorageIdField = value;
                    this.RaisePropertyChanged("StorageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Thumbnail1 {
            get {
                return this.Thumbnail1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Thumbnail1Field, value) != true)) {
                    this.Thumbnail1Field = value;
                    this.RaisePropertyChanged("Thumbnail1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Thumbnail2 {
            get {
                return this.Thumbnail2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Thumbnail2Field, value) != true)) {
                    this.Thumbnail2Field = value;
                    this.RaisePropertyChanged("Thumbnail2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Thumbnail3 {
            get {
                return this.Thumbnail3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Thumbnail3Field, value) != true)) {
                    this.Thumbnail3Field = value;
                    this.RaisePropertyChanged("Thumbnail3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Thumbnail4 {
            get {
                return this.Thumbnail4Field;
            }
            set {
                if ((object.ReferenceEquals(this.Thumbnail4Field, value) != true)) {
                    this.Thumbnail4Field = value;
                    this.RaisePropertyChanged("Thumbnail4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MyFolder", Namespace="http://schemas.datacontract.org/2004/07/MexServices")]
    [System.SerializableAttribute()]
    public partial class MyFolder : Business.CoreService.BaseObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentId {
            get {
                return this.ParentIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentIdField, value) != true)) {
                    this.ParentIdField = value;
                    this.RaisePropertyChanged("ParentId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MyFile", Namespace="http://schemas.datacontract.org/2004/07/MexServices")]
    [System.SerializableAttribute()]
    public partial class MyFile : Business.CoreService.BaseObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentId {
            get {
                return this.ParentIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentIdField, value) != true)) {
                    this.ParentIdField = value;
                    this.RaisePropertyChanged("ParentId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Message", Namespace="http://schemas.datacontract.org/2004/07/MexServices")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Business.CoreService.Mesage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Business.CoreService.Feed))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Business.CoreService.Invitation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Business.CoreService.GeneralMessage))]
    public partial class Message : Business.CoreService.BaseObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Tuple<string, string> AttachmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ExpiryTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageMasterIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime MessageTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecipientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecipientsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResponseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderImgUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SendorIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Tuple<string, string> Attachment {
            get {
                return this.AttachmentField;
            }
            set {
                if ((object.ReferenceEquals(this.AttachmentField, value) != true)) {
                    this.AttachmentField = value;
                    this.RaisePropertyChanged("Attachment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatorId {
            get {
                return this.CreatorIdField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorIdField, value) != true)) {
                    this.CreatorIdField = value;
                    this.RaisePropertyChanged("CreatorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ExpiryTime {
            get {
                return this.ExpiryTimeField;
            }
            set {
                if ((this.ExpiryTimeField.Equals(value) != true)) {
                    this.ExpiryTimeField = value;
                    this.RaisePropertyChanged("ExpiryTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageMasterId {
            get {
                return this.MessageMasterIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageMasterIdField, value) != true)) {
                    this.MessageMasterIdField = value;
                    this.RaisePropertyChanged("MessageMasterId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageText {
            get {
                return this.MessageTextField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageTextField, value) != true)) {
                    this.MessageTextField = value;
                    this.RaisePropertyChanged("MessageText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime MessageTime {
            get {
                return this.MessageTimeField;
            }
            set {
                if ((this.MessageTimeField.Equals(value) != true)) {
                    this.MessageTimeField = value;
                    this.RaisePropertyChanged("MessageTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecipientId {
            get {
                return this.RecipientIdField;
            }
            set {
                if ((object.ReferenceEquals(this.RecipientIdField, value) != true)) {
                    this.RecipientIdField = value;
                    this.RaisePropertyChanged("RecipientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Recipients {
            get {
                return this.RecipientsField;
            }
            set {
                if ((object.ReferenceEquals(this.RecipientsField, value) != true)) {
                    this.RecipientsField = value;
                    this.RaisePropertyChanged("Recipients");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Response {
            get {
                return this.ResponseField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponseField, value) != true)) {
                    this.ResponseField = value;
                    this.RaisePropertyChanged("Response");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sender {
            get {
                return this.SenderField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderField, value) != true)) {
                    this.SenderField = value;
                    this.RaisePropertyChanged("Sender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SenderImgUrl {
            get {
                return this.SenderImgUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderImgUrlField, value) != true)) {
                    this.SenderImgUrlField = value;
                    this.RaisePropertyChanged("SenderImgUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SendorId {
            get {
                return this.SendorIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SendorIdField, value) != true)) {
                    this.SendorIdField = value;
                    this.RaisePropertyChanged("SendorId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Mesage", Namespace="http://schemas.datacontract.org/2004/07/MexServices")]
    [System.SerializableAttribute()]
    public partial class Mesage : Business.CoreService.Message {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsReciviedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecipientTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string mStatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRecivied {
            get {
                return this.IsReciviedField;
            }
            set {
                if ((this.IsReciviedField.Equals(value) != true)) {
                    this.IsReciviedField = value;
                    this.RaisePropertyChanged("IsRecivied");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecipientType {
            get {
                return this.RecipientTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.RecipientTypeField, value) != true)) {
                    this.RecipientTypeField = value;
                    this.RaisePropertyChanged("RecipientType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SenderType {
            get {
                return this.SenderTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderTypeField, value) != true)) {
                    this.SenderTypeField = value;
                    this.RaisePropertyChanged("SenderType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string mStatus {
            get {
                return this.mStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.mStatusField, value) != true)) {
                    this.mStatusField = value;
                    this.RaisePropertyChanged("mStatus");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Feed", Namespace="http://schemas.datacontract.org/2004/07/MexServices")]
    [System.SerializableAttribute()]
    public partial class Feed : Business.CoreService.Message {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsReciviedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecipientTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string mStatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRecivied {
            get {
                return this.IsReciviedField;
            }
            set {
                if ((this.IsReciviedField.Equals(value) != true)) {
                    this.IsReciviedField = value;
                    this.RaisePropertyChanged("IsRecivied");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecipientType {
            get {
                return this.RecipientTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.RecipientTypeField, value) != true)) {
                    this.RecipientTypeField = value;
                    this.RaisePropertyChanged("RecipientType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SenderType {
            get {
                return this.SenderTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderTypeField, value) != true)) {
                    this.SenderTypeField = value;
                    this.RaisePropertyChanged("SenderType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string mStatus {
            get {
                return this.mStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.mStatusField, value) != true)) {
                    this.mStatusField = value;
                    this.RaisePropertyChanged("mStatus");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Invitation", Namespace="http://schemas.datacontract.org/2004/07/MexServices")]
    [System.SerializableAttribute()]
    public partial class Invitation : Business.CoreService.Message {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsReciviedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecipientTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string mStatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRecivied {
            get {
                return this.IsReciviedField;
            }
            set {
                if ((this.IsReciviedField.Equals(value) != true)) {
                    this.IsReciviedField = value;
                    this.RaisePropertyChanged("IsRecivied");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecipientType {
            get {
                return this.RecipientTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.RecipientTypeField, value) != true)) {
                    this.RecipientTypeField = value;
                    this.RaisePropertyChanged("RecipientType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SenderType {
            get {
                return this.SenderTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderTypeField, value) != true)) {
                    this.SenderTypeField = value;
                    this.RaisePropertyChanged("SenderType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string mStatus {
            get {
                return this.mStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.mStatusField, value) != true)) {
                    this.mStatusField = value;
                    this.RaisePropertyChanged("mStatus");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GeneralMessage", Namespace="http://schemas.datacontract.org/2004/07/MexServices")]
    [System.SerializableAttribute()]
    public partial class GeneralMessage : Business.CoreService.Message {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsReciviedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecipientTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string mStatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRecivied {
            get {
                return this.IsReciviedField;
            }
            set {
                if ((this.IsReciviedField.Equals(value) != true)) {
                    this.IsReciviedField = value;
                    this.RaisePropertyChanged("IsRecivied");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecipientType {
            get {
                return this.RecipientTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.RecipientTypeField, value) != true)) {
                    this.RecipientTypeField = value;
                    this.RaisePropertyChanged("RecipientType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SenderType {
            get {
                return this.SenderTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderTypeField, value) != true)) {
                    this.SenderTypeField = value;
                    this.RaisePropertyChanged("SenderType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string mStatus {
            get {
                return this.mStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.mStatusField, value) != true)) {
                    this.mStatusField = value;
                    this.RaisePropertyChanged("mStatus");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MessageMaster", Namespace="http://schemas.datacontract.org/2004/07/MexServices")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Business.CoreService.MesageMaster))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Business.CoreService.FeedMaster))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Business.CoreService.InvitationMaster))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Business.CoreService.GeneralMessageMaster))]
    public partial class MessageMaster : Business.CoreService.BaseObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ExpiryTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvitationMasterIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvitationTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime InviteTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InviteesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvitorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SendorIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ExpiryTime {
            get {
                return this.ExpiryTimeField;
            }
            set {
                if ((this.ExpiryTimeField.Equals(value) != true)) {
                    this.ExpiryTimeField = value;
                    this.RaisePropertyChanged("ExpiryTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvitationMasterId {
            get {
                return this.InvitationMasterIdField;
            }
            set {
                if ((object.ReferenceEquals(this.InvitationMasterIdField, value) != true)) {
                    this.InvitationMasterIdField = value;
                    this.RaisePropertyChanged("InvitationMasterId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvitationText {
            get {
                return this.InvitationTextField;
            }
            set {
                if ((object.ReferenceEquals(this.InvitationTextField, value) != true)) {
                    this.InvitationTextField = value;
                    this.RaisePropertyChanged("InvitationText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime InviteTime {
            get {
                return this.InviteTimeField;
            }
            set {
                if ((this.InviteTimeField.Equals(value) != true)) {
                    this.InviteTimeField = value;
                    this.RaisePropertyChanged("InviteTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Invitees {
            get {
                return this.InviteesField;
            }
            set {
                if ((object.ReferenceEquals(this.InviteesField, value) != true)) {
                    this.InviteesField = value;
                    this.RaisePropertyChanged("Invitees");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvitorId {
            get {
                return this.InvitorIdField;
            }
            set {
                if ((object.ReferenceEquals(this.InvitorIdField, value) != true)) {
                    this.InvitorIdField = value;
                    this.RaisePropertyChanged("InvitorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SendorId {
            get {
                return this.SendorIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SendorIdField, value) != true)) {
                    this.SendorIdField = value;
                    this.RaisePropertyChanged("SendorId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MesageMaster", Namespace="http://schemas.datacontract.org/2004/07/MexServices")]
    [System.SerializableAttribute()]
    public partial class MesageMaster : Business.CoreService.MessageMaster {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecipientTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecipientType {
            get {
                return this.RecipientTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.RecipientTypeField, value) != true)) {
                    this.RecipientTypeField = value;
                    this.RaisePropertyChanged("RecipientType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SenderType {
            get {
                return this.SenderTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderTypeField, value) != true)) {
                    this.SenderTypeField = value;
                    this.RaisePropertyChanged("SenderType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FeedMaster", Namespace="http://schemas.datacontract.org/2004/07/MexServices")]
    [System.SerializableAttribute()]
    public partial class FeedMaster : Business.CoreService.MessageMaster {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecipientTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecipientType {
            get {
                return this.RecipientTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.RecipientTypeField, value) != true)) {
                    this.RecipientTypeField = value;
                    this.RaisePropertyChanged("RecipientType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SenderType {
            get {
                return this.SenderTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderTypeField, value) != true)) {
                    this.SenderTypeField = value;
                    this.RaisePropertyChanged("SenderType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvitationMaster", Namespace="http://schemas.datacontract.org/2004/07/MexServices")]
    [System.SerializableAttribute()]
    public partial class InvitationMaster : Business.CoreService.MessageMaster {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecipientTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecipientType {
            get {
                return this.RecipientTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.RecipientTypeField, value) != true)) {
                    this.RecipientTypeField = value;
                    this.RaisePropertyChanged("RecipientType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SenderType {
            get {
                return this.SenderTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderTypeField, value) != true)) {
                    this.SenderTypeField = value;
                    this.RaisePropertyChanged("SenderType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GeneralMessageMaster", Namespace="http://schemas.datacontract.org/2004/07/MexServices")]
    [System.SerializableAttribute()]
    public partial class GeneralMessageMaster : Business.CoreService.MessageMaster {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecipientTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecipientType {
            get {
                return this.RecipientTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.RecipientTypeField, value) != true)) {
                    this.RecipientTypeField = value;
                    this.RaisePropertyChanged("RecipientType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SenderType {
            get {
                return this.SenderTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderTypeField, value) != true)) {
                    this.SenderTypeField = value;
                    this.RaisePropertyChanged("SenderType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Content", Namespace="http://schemas.datacontract.org/2004/07/MexServices")]
    [System.SerializableAttribute()]
    public partial class Content : Business.CoreService.BaseObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CheckSumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExtensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StorageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Thumbnail1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Thumbnail2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Thumbnail3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Thumbnail4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string eCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string eLocationField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CheckSum {
            get {
                return this.CheckSumField;
            }
            set {
                if ((object.ReferenceEquals(this.CheckSumField, value) != true)) {
                    this.CheckSumField = value;
                    this.RaisePropertyChanged("CheckSum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Extension {
            get {
                return this.ExtensionField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtensionField, value) != true)) {
                    this.ExtensionField = value;
                    this.RaisePropertyChanged("Extension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Index {
            get {
                return this.IndexField;
            }
            set {
                if ((object.ReferenceEquals(this.IndexField, value) != true)) {
                    this.IndexField = value;
                    this.RaisePropertyChanged("Index");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Link {
            get {
                return this.LinkField;
            }
            set {
                if ((object.ReferenceEquals(this.LinkField, value) != true)) {
                    this.LinkField = value;
                    this.RaisePropertyChanged("Link");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Path {
            get {
                return this.PathField;
            }
            set {
                if ((object.ReferenceEquals(this.PathField, value) != true)) {
                    this.PathField = value;
                    this.RaisePropertyChanged("Path");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StorageId {
            get {
                return this.StorageIdField;
            }
            set {
                if ((object.ReferenceEquals(this.StorageIdField, value) != true)) {
                    this.StorageIdField = value;
                    this.RaisePropertyChanged("StorageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Thumbnail1 {
            get {
                return this.Thumbnail1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Thumbnail1Field, value) != true)) {
                    this.Thumbnail1Field = value;
                    this.RaisePropertyChanged("Thumbnail1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Thumbnail2 {
            get {
                return this.Thumbnail2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Thumbnail2Field, value) != true)) {
                    this.Thumbnail2Field = value;
                    this.RaisePropertyChanged("Thumbnail2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Thumbnail3 {
            get {
                return this.Thumbnail3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Thumbnail3Field, value) != true)) {
                    this.Thumbnail3Field = value;
                    this.RaisePropertyChanged("Thumbnail3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Thumbnail4 {
            get {
                return this.Thumbnail4Field;
            }
            set {
                if ((object.ReferenceEquals(this.Thumbnail4Field, value) != true)) {
                    this.Thumbnail4Field = value;
                    this.RaisePropertyChanged("Thumbnail4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string eCategory {
            get {
                return this.eCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.eCategoryField, value) != true)) {
                    this.eCategoryField = value;
                    this.RaisePropertyChanged("eCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string eLocation {
            get {
                return this.eLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.eLocationField, value) != true)) {
                    this.eLocationField = value;
                    this.RaisePropertyChanged("eLocation");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MList", Namespace="http://schemas.datacontract.org/2004/07/MexServices")]
    [System.SerializableAttribute()]
    public partial class MList : Business.CoreService.BaseObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ChildCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IndexvalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentListIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChildCount {
            get {
                return this.ChildCountField;
            }
            set {
                if ((this.ChildCountField.Equals(value) != true)) {
                    this.ChildCountField = value;
                    this.RaisePropertyChanged("ChildCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Indexval {
            get {
                return this.IndexvalField;
            }
            set {
                if ((this.IndexvalField.Equals(value) != true)) {
                    this.IndexvalField = value;
                    this.RaisePropertyChanged("Indexval");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentListId {
            get {
                return this.ParentListIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentListIdField, value) != true)) {
                    this.ParentListIdField = value;
                    this.RaisePropertyChanged("ParentListId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActivityStream", Namespace="http://schemas.datacontract.org/2004/07/MexServices")]
    [System.SerializableAttribute()]
    public partial class ActivityStream : Business.CoreService.BaseObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ActivityTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecipientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TargetIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ActivityTime {
            get {
                return this.ActivityTimeField;
            }
            set {
                if ((this.ActivityTimeField.Equals(value) != true)) {
                    this.ActivityTimeField = value;
                    this.RaisePropertyChanged("ActivityTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecipientId {
            get {
                return this.RecipientIdField;
            }
            set {
                if ((object.ReferenceEquals(this.RecipientIdField, value) != true)) {
                    this.RecipientIdField = value;
                    this.RaisePropertyChanged("RecipientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TargetId {
            get {
                return this.TargetIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TargetIdField, value) != true)) {
                    this.TargetIdField = value;
                    this.RaisePropertyChanged("TargetId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIdField, value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Comment", Namespace="http://schemas.datacontract.org/2004/07/MexServices")]
    [System.SerializableAttribute()]
    public partial class Comment : Business.CoreService.BaseObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubjectIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubjectTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Business.CoreService.User objUserField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Des {
            get {
                return this.DesField;
            }
            set {
                if ((object.ReferenceEquals(this.DesField, value) != true)) {
                    this.DesField = value;
                    this.RaisePropertyChanged("Des");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentId {
            get {
                return this.ParentIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentIdField, value) != true)) {
                    this.ParentIdField = value;
                    this.RaisePropertyChanged("ParentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubjectId {
            get {
                return this.SubjectIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SubjectIdField, value) != true)) {
                    this.SubjectIdField = value;
                    this.RaisePropertyChanged("SubjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubjectType {
            get {
                return this.SubjectTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SubjectTypeField, value) != true)) {
                    this.SubjectTypeField = value;
                    this.RaisePropertyChanged("SubjectType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserImage {
            get {
                return this.UserImageField;
            }
            set {
                if ((object.ReferenceEquals(this.UserImageField, value) != true)) {
                    this.UserImageField = value;
                    this.RaisePropertyChanged("UserImage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Business.CoreService.User objUser {
            get {
                return this.objUserField;
            }
            set {
                if ((object.ReferenceEquals(this.objUserField, value) != true)) {
                    this.objUserField = value;
                    this.RaisePropertyChanged("objUser");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseUser", Namespace="http://schemas.datacontract.org/2004/07/MexServices")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Business.CoreService.Group))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Business.CoreService.User))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Business.CoreService.Friend))]
    public partial class BaseUser : Business.CoreService.BaseObject {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Group", Namespace="http://schemas.datacontract.org/2004/07/MexServices")]
    [System.SerializableAttribute()]
    public partial class Group : Business.CoreService.BaseUser {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentId {
            get {
                return this.ParentIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentIdField, value) != true)) {
                    this.ParentIdField = value;
                    this.RaisePropertyChanged("ParentId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/MexServices")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Business.CoreService.Friend))]
    public partial class User : Business.CoreService.BaseUser {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LogintypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageUrl {
            get {
                return this.ImageUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageUrlField, value) != true)) {
                    this.ImageUrlField = value;
                    this.RaisePropertyChanged("ImageUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Logintype {
            get {
                return this.LogintypeField;
            }
            set {
                if ((object.ReferenceEquals(this.LogintypeField, value) != true)) {
                    this.LogintypeField = value;
                    this.RaisePropertyChanged("Logintype");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Role {
            get {
                return this.RoleField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleField, value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Friend", Namespace="http://schemas.datacontract.org/2004/07/MexServices")]
    [System.SerializableAttribute()]
    public partial class Friend : Business.CoreService.User {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentId {
            get {
                return this.ParentIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentIdField, value) != true)) {
                    this.ParentIdField = value;
                    this.RaisePropertyChanged("ParentId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomException", Namespace="http://schemas.datacontract.org/2004/07/MexServices")]
    [System.SerializableAttribute()]
    public partial class CustomException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExceptionMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InnerExceptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StackTraceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InnerException {
            get {
                return this.InnerExceptionField;
            }
            set {
                if ((object.ReferenceEquals(this.InnerExceptionField, value) != true)) {
                    this.InnerExceptionField = value;
                    this.RaisePropertyChanged("InnerException");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StackTrace {
            get {
                return this.StackTraceField;
            }
            set {
                if ((object.ReferenceEquals(this.StackTraceField, value) != true)) {
                    this.StackTraceField = value;
                    this.RaisePropertyChanged("StackTrace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Permission", Namespace="http://schemas.datacontract.org/2004/07/MexServices")]
    public enum Permission : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoAccess = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Read = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Create = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Change = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Delete = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GrantPerm = 5,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SchoolInfo", Namespace="http://schemas.datacontract.org/2004/07/MexServices")]
    [System.SerializableAttribute()]
    public partial class SchoolInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DegreeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EndYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GPAField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StartYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Degree {
            get {
                return this.DegreeField;
            }
            set {
                if ((object.ReferenceEquals(this.DegreeField, value) != true)) {
                    this.DegreeField = value;
                    this.RaisePropertyChanged("Degree");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EndYear {
            get {
                return this.EndYearField;
            }
            set {
                if ((object.ReferenceEquals(this.EndYearField, value) != true)) {
                    this.EndYearField = value;
                    this.RaisePropertyChanged("EndYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GPA {
            get {
                return this.GPAField;
            }
            set {
                if ((object.ReferenceEquals(this.GPAField, value) != true)) {
                    this.GPAField = value;
                    this.RaisePropertyChanged("GPA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StartYear {
            get {
                return this.StartYearField;
            }
            set {
                if ((object.ReferenceEquals(this.StartYearField, value) != true)) {
                    this.StartYearField = value;
                    this.RaisePropertyChanged("StartYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Achivement", Namespace="http://schemas.datacontract.org/2004/07/MexServices")]
    [System.SerializableAttribute()]
    public partial class Achivement : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IssuedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Des {
            get {
                return this.DesField;
            }
            set {
                if ((object.ReferenceEquals(this.DesField, value) != true)) {
                    this.DesField = value;
                    this.RaisePropertyChanged("Des");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((object.ReferenceEquals(this.EndDateField, value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IssuedBy {
            get {
                return this.IssuedByField;
            }
            set {
                if ((object.ReferenceEquals(this.IssuedByField, value) != true)) {
                    this.IssuedByField = value;
                    this.RaisePropertyChanged("IssuedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((object.ReferenceEquals(this.StartDateField, value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Address", Namespace="http://schemas.datacontract.org/2004/07/MexServices")]
    [System.SerializableAttribute()]
    public partial class Address : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityLatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityLongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Line1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Line2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationLatiudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationLongiudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubjectIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubjectTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipcodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressId {
            get {
                return this.AddressIdField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressIdField, value) != true)) {
                    this.AddressIdField = value;
                    this.RaisePropertyChanged("AddressId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityId {
            get {
                return this.CityIdField;
            }
            set {
                if ((object.ReferenceEquals(this.CityIdField, value) != true)) {
                    this.CityIdField = value;
                    this.RaisePropertyChanged("CityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityLatitude {
            get {
                return this.CityLatitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.CityLatitudeField, value) != true)) {
                    this.CityLatitudeField = value;
                    this.RaisePropertyChanged("CityLatitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityLongitude {
            get {
                return this.CityLongitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.CityLongitudeField, value) != true)) {
                    this.CityLongitudeField = value;
                    this.RaisePropertyChanged("CityLongitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Line1 {
            get {
                return this.Line1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Line1Field, value) != true)) {
                    this.Line1Field = value;
                    this.RaisePropertyChanged("Line1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Line2 {
            get {
                return this.Line2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Line2Field, value) != true)) {
                    this.Line2Field = value;
                    this.RaisePropertyChanged("Line2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationId {
            get {
                return this.LocationIdField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationIdField, value) != true)) {
                    this.LocationIdField = value;
                    this.RaisePropertyChanged("LocationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationLatiude {
            get {
                return this.LocationLatiudeField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationLatiudeField, value) != true)) {
                    this.LocationLatiudeField = value;
                    this.RaisePropertyChanged("LocationLatiude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationLongiude {
            get {
                return this.LocationLongiudeField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationLongiudeField, value) != true)) {
                    this.LocationLongiudeField = value;
                    this.RaisePropertyChanged("LocationLongiude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubType {
            get {
                return this.SubTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SubTypeField, value) != true)) {
                    this.SubTypeField = value;
                    this.RaisePropertyChanged("SubType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubjectId {
            get {
                return this.SubjectIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SubjectIdField, value) != true)) {
                    this.SubjectIdField = value;
                    this.RaisePropertyChanged("SubjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubjectType {
            get {
                return this.SubjectTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SubjectTypeField, value) != true)) {
                    this.SubjectTypeField = value;
                    this.RaisePropertyChanged("SubjectType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zipcode {
            get {
                return this.ZipcodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipcodeField, value) != true)) {
                    this.ZipcodeField = value;
                    this.RaisePropertyChanged("Zipcode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Contact", Namespace="http://schemas.datacontract.org/2004/07/MexServices")]
    [System.SerializableAttribute()]
    public partial class Contact : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AltEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacebookField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HomePhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LinkedLnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, string> OtherProfilesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, string> OtherphonesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PreferedContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PreferedTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SkypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WorkPhoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AltEmail {
            get {
                return this.AltEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.AltEmailField, value) != true)) {
                    this.AltEmailField = value;
                    this.RaisePropertyChanged("AltEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Facebook {
            get {
                return this.FacebookField;
            }
            set {
                if ((object.ReferenceEquals(this.FacebookField, value) != true)) {
                    this.FacebookField = value;
                    this.RaisePropertyChanged("Facebook");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HomePhone {
            get {
                return this.HomePhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.HomePhoneField, value) != true)) {
                    this.HomePhoneField = value;
                    this.RaisePropertyChanged("HomePhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LinkedLn {
            get {
                return this.LinkedLnField;
            }
            set {
                if ((object.ReferenceEquals(this.LinkedLnField, value) != true)) {
                    this.LinkedLnField = value;
                    this.RaisePropertyChanged("LinkedLn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mobile {
            get {
                return this.MobileField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileField, value) != true)) {
                    this.MobileField = value;
                    this.RaisePropertyChanged("Mobile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, string> OtherProfiles {
            get {
                return this.OtherProfilesField;
            }
            set {
                if ((object.ReferenceEquals(this.OtherProfilesField, value) != true)) {
                    this.OtherProfilesField = value;
                    this.RaisePropertyChanged("OtherProfiles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, string> Otherphones {
            get {
                return this.OtherphonesField;
            }
            set {
                if ((object.ReferenceEquals(this.OtherphonesField, value) != true)) {
                    this.OtherphonesField = value;
                    this.RaisePropertyChanged("Otherphones");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PreferedContact {
            get {
                return this.PreferedContactField;
            }
            set {
                if ((object.ReferenceEquals(this.PreferedContactField, value) != true)) {
                    this.PreferedContactField = value;
                    this.RaisePropertyChanged("PreferedContact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PreferedTime {
            get {
                return this.PreferedTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.PreferedTimeField, value) != true)) {
                    this.PreferedTimeField = value;
                    this.RaisePropertyChanged("PreferedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Skype {
            get {
                return this.SkypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SkypeField, value) != true)) {
                    this.SkypeField = value;
                    this.RaisePropertyChanged("Skype");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkPhone {
            get {
                return this.WorkPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkPhoneField, value) != true)) {
                    this.WorkPhoneField = value;
                    this.RaisePropertyChanged("WorkPhone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PersonalProfile", Namespace="http://schemas.datacontract.org/2004/07/MexServices")]
    [System.SerializableAttribute()]
    public partial class PersonalProfile : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DOBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GraduationLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GraduationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HobbiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string weightField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DOB {
            get {
                return this.DOBField;
            }
            set {
                if ((object.ReferenceEquals(this.DOBField, value) != true)) {
                    this.DOBField = value;
                    this.RaisePropertyChanged("DOB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Firstname {
            get {
                return this.FirstnameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstnameField, value) != true)) {
                    this.FirstnameField = value;
                    this.RaisePropertyChanged("Firstname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderField, value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GraduationLevel {
            get {
                return this.GraduationLevelField;
            }
            set {
                if ((object.ReferenceEquals(this.GraduationLevelField, value) != true)) {
                    this.GraduationLevelField = value;
                    this.RaisePropertyChanged("GraduationLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GraduationName {
            get {
                return this.GraduationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GraduationNameField, value) != true)) {
                    this.GraduationNameField = value;
                    this.RaisePropertyChanged("GraduationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Height {
            get {
                return this.HeightField;
            }
            set {
                if ((object.ReferenceEquals(this.HeightField, value) != true)) {
                    this.HeightField = value;
                    this.RaisePropertyChanged("Height");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Hobbies {
            get {
                return this.HobbiesField;
            }
            set {
                if ((object.ReferenceEquals(this.HobbiesField, value) != true)) {
                    this.HobbiesField = value;
                    this.RaisePropertyChanged("Hobbies");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Lastname {
            get {
                return this.LastnameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastnameField, value) != true)) {
                    this.LastnameField = value;
                    this.RaisePropertyChanged("Lastname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string weight {
            get {
                return this.weightField;
            }
            set {
                if ((object.ReferenceEquals(this.weightField, value) != true)) {
                    this.weightField = value;
                    this.RaisePropertyChanged("weight");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserProfile", Namespace="http://schemas.datacontract.org/2004/07/MexServices")]
    [System.SerializableAttribute()]
    public partial class UserProfile : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Business.CoreService.Address[] AddressInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, string> AvalibilityInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CategoryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Business.CoreService.Achivement[] CertificationInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Business.CoreService.Contact ContactInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Business.CoreService.SchoolInfo[] EducationInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FollowCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FollowerCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FriendsCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LastLoginCityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastLoginDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LikeCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MessageCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NV1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NV2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NV3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NV4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NV5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NV6Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Business.CoreService.PersonalProfile PersonalProfileInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProfileIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProfileTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, string> PropertiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RatingCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RecommendationCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StateIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SubCategoryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int locateIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Business.CoreService.Address[] AddressInfo {
            get {
                return this.AddressInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressInfoField, value) != true)) {
                    this.AddressInfoField = value;
                    this.RaisePropertyChanged("AddressInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, string> AvalibilityInfo {
            get {
                return this.AvalibilityInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.AvalibilityInfoField, value) != true)) {
                    this.AvalibilityInfoField = value;
                    this.RaisePropertyChanged("AvalibilityInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryId {
            get {
                return this.CategoryIdField;
            }
            set {
                if ((this.CategoryIdField.Equals(value) != true)) {
                    this.CategoryIdField = value;
                    this.RaisePropertyChanged("CategoryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Business.CoreService.Achivement[] CertificationInfo {
            get {
                return this.CertificationInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.CertificationInfoField, value) != true)) {
                    this.CertificationInfoField = value;
                    this.RaisePropertyChanged("CertificationInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CityId {
            get {
                return this.CityIdField;
            }
            set {
                if ((this.CityIdField.Equals(value) != true)) {
                    this.CityIdField = value;
                    this.RaisePropertyChanged("CityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Business.CoreService.Contact ContactInfo {
            get {
                return this.ContactInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactInfoField, value) != true)) {
                    this.ContactInfoField = value;
                    this.RaisePropertyChanged("ContactInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountryId {
            get {
                return this.CountryIdField;
            }
            set {
                if ((this.CountryIdField.Equals(value) != true)) {
                    this.CountryIdField = value;
                    this.RaisePropertyChanged("CountryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Business.CoreService.SchoolInfo[] EducationInfo {
            get {
                return this.EducationInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.EducationInfoField, value) != true)) {
                    this.EducationInfoField = value;
                    this.RaisePropertyChanged("EducationInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FollowCount {
            get {
                return this.FollowCountField;
            }
            set {
                if ((this.FollowCountField.Equals(value) != true)) {
                    this.FollowCountField = value;
                    this.RaisePropertyChanged("FollowCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FollowerCount {
            get {
                return this.FollowerCountField;
            }
            set {
                if ((this.FollowerCountField.Equals(value) != true)) {
                    this.FollowerCountField = value;
                    this.RaisePropertyChanged("FollowerCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FriendsCount {
            get {
                return this.FriendsCountField;
            }
            set {
                if ((this.FriendsCountField.Equals(value) != true)) {
                    this.FriendsCountField = value;
                    this.RaisePropertyChanged("FriendsCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LastLoginCityId {
            get {
                return this.LastLoginCityIdField;
            }
            set {
                if ((this.LastLoginCityIdField.Equals(value) != true)) {
                    this.LastLoginCityIdField = value;
                    this.RaisePropertyChanged("LastLoginCityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastLoginDate {
            get {
                return this.LastLoginDateField;
            }
            set {
                if ((this.LastLoginDateField.Equals(value) != true)) {
                    this.LastLoginDateField = value;
                    this.RaisePropertyChanged("LastLoginDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LikeCount {
            get {
                return this.LikeCountField;
            }
            set {
                if ((this.LikeCountField.Equals(value) != true)) {
                    this.LikeCountField = value;
                    this.RaisePropertyChanged("LikeCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MessageCount {
            get {
                return this.MessageCountField;
            }
            set {
                if ((this.MessageCountField.Equals(value) != true)) {
                    this.MessageCountField = value;
                    this.RaisePropertyChanged("MessageCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NV1 {
            get {
                return this.NV1Field;
            }
            set {
                if ((object.ReferenceEquals(this.NV1Field, value) != true)) {
                    this.NV1Field = value;
                    this.RaisePropertyChanged("NV1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NV2 {
            get {
                return this.NV2Field;
            }
            set {
                if ((object.ReferenceEquals(this.NV2Field, value) != true)) {
                    this.NV2Field = value;
                    this.RaisePropertyChanged("NV2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NV3 {
            get {
                return this.NV3Field;
            }
            set {
                if ((object.ReferenceEquals(this.NV3Field, value) != true)) {
                    this.NV3Field = value;
                    this.RaisePropertyChanged("NV3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NV4 {
            get {
                return this.NV4Field;
            }
            set {
                if ((object.ReferenceEquals(this.NV4Field, value) != true)) {
                    this.NV4Field = value;
                    this.RaisePropertyChanged("NV4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NV5 {
            get {
                return this.NV5Field;
            }
            set {
                if ((object.ReferenceEquals(this.NV5Field, value) != true)) {
                    this.NV5Field = value;
                    this.RaisePropertyChanged("NV5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NV6 {
            get {
                return this.NV6Field;
            }
            set {
                if ((object.ReferenceEquals(this.NV6Field, value) != true)) {
                    this.NV6Field = value;
                    this.RaisePropertyChanged("NV6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Business.CoreService.PersonalProfile PersonalProfileInfo {
            get {
                return this.PersonalProfileInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonalProfileInfoField, value) != true)) {
                    this.PersonalProfileInfoField = value;
                    this.RaisePropertyChanged("PersonalProfileInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProfileId {
            get {
                return this.ProfileIdField;
            }
            set {
                if ((this.ProfileIdField.Equals(value) != true)) {
                    this.ProfileIdField = value;
                    this.RaisePropertyChanged("ProfileId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProfileType {
            get {
                return this.ProfileTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfileTypeField, value) != true)) {
                    this.ProfileTypeField = value;
                    this.RaisePropertyChanged("ProfileType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, string> Properties {
            get {
                return this.PropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertiesField, value) != true)) {
                    this.PropertiesField = value;
                    this.RaisePropertyChanged("Properties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RatingCount {
            get {
                return this.RatingCountField;
            }
            set {
                if ((this.RatingCountField.Equals(value) != true)) {
                    this.RatingCountField = value;
                    this.RaisePropertyChanged("RatingCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RecommendationCount {
            get {
                return this.RecommendationCountField;
            }
            set {
                if ((this.RecommendationCountField.Equals(value) != true)) {
                    this.RecommendationCountField = value;
                    this.RaisePropertyChanged("RecommendationCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StateId {
            get {
                return this.StateIdField;
            }
            set {
                if ((this.StateIdField.Equals(value) != true)) {
                    this.StateIdField = value;
                    this.RaisePropertyChanged("StateId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SubCategoryId {
            get {
                return this.SubCategoryIdField;
            }
            set {
                if ((this.SubCategoryIdField.Equals(value) != true)) {
                    this.SubCategoryIdField = value;
                    this.RaisePropertyChanged("SubCategoryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIdField, value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int locateId {
            get {
                return this.locateIdField;
            }
            set {
                if ((this.locateIdField.Equals(value) != true)) {
                    this.locateIdField = value;
                    this.RaisePropertyChanged("locateId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Subject", Namespace="http://schemas.datacontract.org/2004/07/MexServices")]
    public enum Subject : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Profile = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        User = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CoreService.IobjectServicesWebappVer2")]
    public interface IobjectServicesWebappVer2 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/HelloWorld", ReplyAction="http://tempuri.org/IObjectServicesWebapp/HelloWorldResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Business.CoreService.CustomException), Action="http://tempuri.org/IObjectServicesWebapp/HelloWorldCustomExceptionFault", Name="CustomException", Namespace="http://schemas.datacontract.org/2004/07/MexServices")]
        Business.CoreService.User HelloWorld(string name, int type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/GetReadFile", ReplyAction="http://tempuri.org/IObjectServicesWebapp/GetReadFileResponse")]
        Business.CoreService.ResourceToken GetReadFile(string ContentId, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/GetWriteFile", ReplyAction="http://tempuri.org/IObjectServicesWebapp/GetWriteFileResponse")]
        Business.CoreService.ResourceToken GetWriteFile(string objecttype, string Filename, string title, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/SetWriteSuccess", ReplyAction="http://tempuri.org/IObjectServicesWebapp/SetWriteSuccessResponse")]
        bool SetWriteSuccess(string ContentId, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/DeleteFile", ReplyAction="http://tempuri.org/IObjectServicesWebapp/DeleteFileResponse")]
        bool DeleteFile(string ContentId, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/GetMyFolders", ReplyAction="http://tempuri.org/IObjectServicesWebapp/GetMyFoldersResponse")]
        Business.CoreService.MyFolder[] GetMyFolders(string since, string parentid, string objecttype, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/GetMyFiles", ReplyAction="http://tempuri.org/IObjectServicesWebapp/GetMyFilesResponse")]
        Business.CoreService.MyFile[] GetMyFiles(string since, string parentid, string objecttype, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/GetSharedFolders", ReplyAction="http://tempuri.org/IObjectServicesWebapp/GetSharedFoldersResponse")]
        Business.CoreService.MyFolder[] GetSharedFolders(string since, string objecttype, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/GetSharedFiles", ReplyAction="http://tempuri.org/IObjectServicesWebapp/GetSharedFilesResponse")]
        Business.CoreService.MyFile[] GetSharedFiles(string since, string objecttype, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/CreateFolder", ReplyAction="http://tempuri.org/IObjectServicesWebapp/CreateFolderResponse")]
        Business.CoreService.MyFolder CreateFolder(string name, string parentId, string objecttype, string prop, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/AddFile", ReplyAction="http://tempuri.org/IObjectServicesWebapp/AddFileResponse")]
        Business.CoreService.MyFile AddFile(string ResourceId, string name, string parentId, string objecttype, string prop, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/RenameFolderItem", ReplyAction="http://tempuri.org/IObjectServicesWebapp/RenameFolderItemResponse")]
        bool RenameFolderItem(string itemid, string name, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/MoveFolderItem", ReplyAction="http://tempuri.org/IObjectServicesWebapp/MoveFolderItemResponse")]
        bool MoveFolderItem(string itemid, string toid, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/RemoveFolderItem", ReplyAction="http://tempuri.org/IObjectServicesWebapp/RemoveFolderItemResponse")]
        bool RemoveFolderItem(string itemid, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/UpdateFolderProperties", ReplyAction="http://tempuri.org/IObjectServicesWebapp/UpdateFolderPropertiesResponse")]
        bool UpdateFolderProperties(string itemid, string prop, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/GetNotifications", ReplyAction="http://tempuri.org/IObjectServicesWebapp/GetNotificationsResponse")]
        Business.CoreService.Message[] GetNotifications(string since, string sendorid, string objecttype, string expiryTime, string downPlayTime, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/CreateNotificationMaster", ReplyAction="http://tempuri.org/IObjectServicesWebapp/CreateNotificationMasterResponse")]
        Business.CoreService.MessageMaster CreateNotificationMaster(string message, string sendorId, string MessageTime, string ExpiryTime, string recipients, string messagetype, string subject, string downPlayTime, string prop, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/RemoveNotificationMaster", ReplyAction="http://tempuri.org/IObjectServicesWebapp/RemoveNotificationMasterResponse")]
        bool RemoveNotificationMaster(string messagemasterid, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/RespondNotification", ReplyAction="http://tempuri.org/IObjectServicesWebapp/RespondNotificationResponse")]
        bool RespondNotification(string messageid, string responsedata, string downPlayTime, string prop, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/AddNotificationRecipients", ReplyAction="http://tempuri.org/IObjectServicesWebapp/AddNotificationRecipientsResponse")]
        bool AddNotificationRecipients(string messageid, string recipients, string type, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/GetNotificationRecipients", ReplyAction="http://tempuri.org/IObjectServicesWebapp/GetNotificationRecipientsResponse")]
        Business.CoreService.User[] GetNotificationRecipients(string messageid, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/Login", ReplyAction="http://tempuri.org/IObjectServicesWebapp/LoginResponse")]
        string Login(string UserName, string Password, string ServiceName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/RegisterUser", ReplyAction="http://tempuri.org/IObjectServicesWebapp/RegisterUserResponse")]
        string RegisterUser(string email, string password, string objecttype, string title, string logintype, string imageUrl, string Firstname, string lastName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/GetUserObject", ReplyAction="http://tempuri.org/IObjectServicesWebapp/GetUserObjectResponse")]
        Business.CoreService.User GetUserObject(string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/LogOut", ReplyAction="http://tempuri.org/IObjectServicesWebapp/LogOutResponse")]
        string LogOut(string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/GetUsers", ReplyAction="http://tempuri.org/IObjectServicesWebapp/GetUsersResponse")]
        Business.CoreService.User[] GetUsers(string since, string objecttype, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/ValidateUser", ReplyAction="http://tempuri.org/IObjectServicesWebapp/ValidateUserResponse")]
        string ValidateUser(string email, string uniqueid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/AuthenticateUser", ReplyAction="http://tempuri.org/IObjectServicesWebapp/AuthenticateUserResponse")]
        string AuthenticateUser(string email, string uniqueid, string cpuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/PublishResourceGroup", ReplyAction="http://tempuri.org/IObjectServicesWebapp/PublishResourceGroupResponse")]
        bool PublishResourceGroup(string groupid, string resourceid, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/UnPublishResourceGroup", ReplyAction="http://tempuri.org/IObjectServicesWebapp/UnPublishResourceGroupResponse")]
        bool UnPublishResourceGroup(string groupid, string resourceid, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/GetPublishedResources", ReplyAction="http://tempuri.org/IObjectServicesWebapp/GetPublishedResourcesResponse")]
        Business.CoreService.Content[] GetPublishedResources(string groupid, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/GetMyPublishedResources", ReplyAction="http://tempuri.org/IObjectServicesWebapp/GetMyPublishedResourcesResponse")]
        Business.CoreService.Content[] GetMyPublishedResources(string groupid, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/LoginNetworkApp", ReplyAction="http://tempuri.org/IObjectServicesWebapp/LoginNetworkAppResponse")]
        string LoginNetworkApp(string UserName, string Password, string ServiceName, string networkid, string appid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/RegisterNetworkAppUser", ReplyAction="http://tempuri.org/IObjectServicesWebapp/RegisterNetworkAppUserResponse")]
        string RegisterNetworkAppUser(string email, string password, string networkid, string appid, string objecttype, string title);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/RegisterNetworkUser", ReplyAction="http://tempuri.org/IObjectServicesWebapp/RegisterNetworkUserResponse")]
        string RegisterNetworkUser(string email, string password, string networkid, string objecttype, string title);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/LoginNetwork", ReplyAction="http://tempuri.org/IObjectServicesWebapp/LoginNetworkResponse")]
        string LoginNetwork(string UserName, string Password, string ServiceName, string NetworkId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/GetAccessibleUsers", ReplyAction="http://tempuri.org/IObjectServicesWebapp/GetAccessibleUsersResponse")]
        Business.CoreService.User[] GetAccessibleUsers(string since, string objectid, string objecttype, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/GetAccessibleObjects", ReplyAction="http://tempuri.org/IObjectServicesWebapp/GetAccessibleObjectsResponse")]
        string[] GetAccessibleObjects(string since, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/IsObjectAccessible", ReplyAction="http://tempuri.org/IObjectServicesWebapp/IsObjectAccessibleResponse")]
        bool IsObjectAccessible(string objectid, Business.CoreService.Permission permission, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/GrantPermission", ReplyAction="http://tempuri.org/IObjectServicesWebapp/GrantPermissionResponse")]
        bool GrantPermission(string objectid, string userid, Business.CoreService.Permission permission, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/GetGroups", ReplyAction="http://tempuri.org/IObjectServicesWebapp/GetGroupsResponse")]
        Business.CoreService.Group[] GetGroups(string since, string parentid, string objecttype, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/GetMyGroups", ReplyAction="http://tempuri.org/IObjectServicesWebapp/GetMyGroupsResponse")]
        Business.CoreService.Group[] GetMyGroups(string since, string parentid, string objecttype, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/CreateGroup", ReplyAction="http://tempuri.org/IObjectServicesWebapp/CreateGroupResponse")]
        Business.CoreService.Group CreateGroup(string name, string parentid, string objecttype, string prop, bool autoSubScribe, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/RemoveGroup", ReplyAction="http://tempuri.org/IObjectServicesWebapp/RemoveGroupResponse")]
        bool RemoveGroup(string groupid, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/GetGroupMembers", ReplyAction="http://tempuri.org/IObjectServicesWebapp/GetGroupMembersResponse")]
        Business.CoreService.User[] GetGroupMembers(string groupid, string since, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/RequestGroupSubscription", ReplyAction="http://tempuri.org/IObjectServicesWebapp/RequestGroupSubscriptionResponse")]
        bool RequestGroupSubscription(string groupid, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/CancelRequestGroupSubscription", ReplyAction="http://tempuri.org/IObjectServicesWebapp/CancelRequestGroupSubscriptionResponse")]
        bool CancelRequestGroupSubscription(string groupid, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/GetGroupPendingSubscriptionRequests", ReplyAction="http://tempuri.org/IObjectServicesWebapp/GetGroupPendingSubscriptionRequestsRespo" +
            "nse")]
        Business.CoreService.User[] GetGroupPendingSubscriptionRequests(string groupid, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/ApproveGroupSubscription", ReplyAction="http://tempuri.org/IObjectServicesWebapp/ApproveGroupSubscriptionResponse")]
        bool ApproveGroupSubscription(string groupid, string userid, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/DisApproveGroupSubscription", ReplyAction="http://tempuri.org/IObjectServicesWebapp/DisApproveGroupSubscriptionResponse")]
        bool DisApproveGroupSubscription(string groupid, string userid, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/InviteGroupSubscription", ReplyAction="http://tempuri.org/IObjectServicesWebapp/InviteGroupSubscriptionResponse")]
        bool InviteGroupSubscription(string groupid, string userid, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/CancelInviteGroupSubscription", ReplyAction="http://tempuri.org/IObjectServicesWebapp/CancelInviteGroupSubscriptionResponse")]
        bool CancelInviteGroupSubscription(string groupid, string userid, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/GetGroupPendingSubscriptionInvitations", ReplyAction="http://tempuri.org/IObjectServicesWebapp/GetGroupPendingSubscriptionInvitationsRe" +
            "sponse")]
        Business.CoreService.Group[] GetGroupPendingSubscriptionInvitations(string groupid, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/AcceptInviteGroupSubscription", ReplyAction="http://tempuri.org/IObjectServicesWebapp/AcceptInviteGroupSubscriptionResponse")]
        bool AcceptInviteGroupSubscription(string groupid, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/RejectInviteGroupSubscription", ReplyAction="http://tempuri.org/IObjectServicesWebapp/RejectInviteGroupSubscriptionResponse")]
        bool RejectInviteGroupSubscription(string groupid, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/GetChildren", ReplyAction="http://tempuri.org/IObjectServicesWebapp/GetChildrenResponse")]
        Business.CoreService.Relation[] GetChildren(string since, string objecttype, string parentId, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/GetParents", ReplyAction="http://tempuri.org/IObjectServicesWebapp/GetParentsResponse")]
        Business.CoreService.Relation[] GetParents(string since, string objecttype, string objectid, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/AddRelation", ReplyAction="http://tempuri.org/IObjectServicesWebapp/AddRelationResponse")]
        Business.CoreService.Relation AddRelation(string parentId, string childId, string objecttype, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/RemoveRelation", ReplyAction="http://tempuri.org/IObjectServicesWebapp/RemoveRelationResponse")]
        bool RemoveRelation(string parentId, string childId, string objecttype, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/GetStaticdata", ReplyAction="http://tempuri.org/IObjectServicesWebapp/GetStaticdataResponse")]
        Business.CoreService.MList[] GetStaticdata(string type, string objecttype, string parentId, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/CreateStaticdata", ReplyAction="http://tempuri.org/IObjectServicesWebapp/CreateStaticdataResponse")]
        Business.CoreService.MList CreateStaticdata(string name, string parentId, string objecttype, string type, string prop, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/ShareFile", ReplyAction="http://tempuri.org/IObjectServicesWebapp/ShareFileResponse")]
        bool ShareFile(string fileid, string userid, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/ShareFolder", ReplyAction="http://tempuri.org/IObjectServicesWebapp/ShareFolderResponse")]
        bool ShareFolder(string folderid, string userid, Business.CoreService.Permission permission, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/UnShareFile", ReplyAction="http://tempuri.org/IObjectServicesWebapp/UnShareFileResponse")]
        bool UnShareFile(string fileid, string userid, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/UnShareFolder", ReplyAction="http://tempuri.org/IObjectServicesWebapp/UnShareFolderResponse")]
        bool UnShareFolder(string folderid, string userid, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/GetFileSharingUsers", ReplyAction="http://tempuri.org/IObjectServicesWebapp/GetFileSharingUsersResponse")]
        Business.CoreService.User[] GetFileSharingUsers(string fileid, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/GetFolderSharingUsers", ReplyAction="http://tempuri.org/IObjectServicesWebapp/GetFolderSharingUsersResponse")]
        Business.CoreService.User[] GetFolderSharingUsers(string folderid, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/CreateActivityMaster", ReplyAction="http://tempuri.org/IObjectServicesWebapp/CreateActivityMasterResponse")]
        Business.CoreService.ActivityStream CreateActivityMaster(string text, string TargetId, string activitytime, string subject, string objecttype, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/DeleteActivityMaster", ReplyAction="http://tempuri.org/IObjectServicesWebapp/DeleteActivityMasterResponse")]
        bool DeleteActivityMaster(string activitymasterid, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/DeleteActivityStream", ReplyAction="http://tempuri.org/IObjectServicesWebapp/DeleteActivityStreamResponse")]
        bool DeleteActivityStream(string activitystreamid, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/GetMyActivity", ReplyAction="http://tempuri.org/IObjectServicesWebapp/GetMyActivityResponse")]
        Business.CoreService.ActivityStream[] GetMyActivity(string since, string objecttype, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/GetActivityStream", ReplyAction="http://tempuri.org/IObjectServicesWebapp/GetActivityStreamResponse")]
        Business.CoreService.ActivityStream[] GetActivityStream(string since, string objecttype, string recipientid, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/GetFBRedirectUrl", ReplyAction="http://tempuri.org/IObjectServicesWebapp/GetFBRedirectUrlResponse")]
        string GetFBRedirectUrl(string RedirectUrl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/GetFBToken", ReplyAction="http://tempuri.org/IObjectServicesWebapp/GetFBTokenResponse")]
        string GetFBToken(string RequestCode, string CallBackURl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/CreateFBFeed", ReplyAction="http://tempuri.org/IObjectServicesWebapp/CreateFBFeedResponse")]
        bool CreateFBFeed(string Token, string msg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/GetUserFriendsList", ReplyAction="http://tempuri.org/IObjectServicesWebapp/GetUserFriendsListResponse")]
        Business.CoreService.User[] GetUserFriendsList(string Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/GetUserDetails", ReplyAction="http://tempuri.org/IObjectServicesWebapp/GetUserDetailsResponse")]
        Business.CoreService.User GetUserDetails(string Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/GettestFBRedirectUrl", ReplyAction="http://tempuri.org/IObjectServicesWebapp/GettestFBRedirectUrlResponse")]
        string GettestFBRedirectUrl(string RedirectUrl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/FBLogout", ReplyAction="http://tempuri.org/IObjectServicesWebapp/FBLogoutResponse")]
        string FBLogout(string RedirectUrl, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectServicesWebapp/CreateVideoFile", ReplyAction="http://tempuri.org/IObjectServicesWebapp/CreateVideoFileResponse")]
        Business.CoreService.ResourceToken CreateVideoFile(string objecttype, string filename, string title, string storageId, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IobjectServicesWebappVer2/InsertProfile", ReplyAction="http://tempuri.org/IobjectServicesWebappVer2/InsertProfileResponse")]
        Business.CoreService.UserProfile InsertProfile(
                    string ProfileType, 
                    int Cityid, 
                    int Stateid, 
                    int Countryid, 
                    int LocateId, 
                    int Categoryid, 
                    int SubCategoryid, 
                    Business.CoreService.SchoolInfo[] Education, 
                    Business.CoreService.Achivement[] Certification, 
                    Business.CoreService.Address[] Address, 
                    Business.CoreService.Contact ContactInfo, 
                    string AvalibilityInfo, 
                    Business.CoreService.PersonalProfile PersonalProfileInfo, 
                    string NV1, 
                    string NV2, 
                    string NV3, 
                    string NV4, 
                    string NV5, 
                    string NV6, 
                    string Prop, 
                    string Usertoken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IobjectServicesWebappVer2/GetUserProfile", ReplyAction="http://tempuri.org/IobjectServicesWebappVer2/GetUserProfileResponse")]
        Business.CoreService.UserProfile GetUserProfile(string UserToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IobjectServicesWebappVer2/UpdateProfile", ReplyAction="http://tempuri.org/IobjectServicesWebappVer2/UpdateProfileResponse")]
        Business.CoreService.UserProfile UpdateProfile(
                    int profileId, 
                    string ProfileType, 
                    int Cityid, 
                    int Stateid, 
                    int Countryid, 
                    int LocateId, 
                    int Categoryid, 
                    int SubCategoryid, 
                    Business.CoreService.SchoolInfo[] Education, 
                    Business.CoreService.Achivement[] Certification, 
                    Business.CoreService.Address[] Address, 
                    Business.CoreService.Contact ContactInfo, 
                    Business.CoreService.PersonalProfile personalInfo, 
                    string AvalibilityInfo, 
                    string Prop, 
                    string NV1, 
                    string NV2, 
                    string NV3, 
                    string NV4, 
                    string NV5, 
                    string NV6, 
                    string UserToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IobjectServicesWebappVer2/UpdateAchivementbyProfileId", ReplyAction="http://tempuri.org/IobjectServicesWebappVer2/UpdateAchivementbyProfileIdResponse")]
        void UpdateAchivementbyProfileId(int ProfileId, Business.CoreService.Achivement[] AchivementInfo, string UserToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IobjectServicesWebappVer2/UpdateAddressbyProfileId", ReplyAction="http://tempuri.org/IobjectServicesWebappVer2/UpdateAddressbyProfileIdResponse")]
        void UpdateAddressbyProfileId(int ProfileId, Business.CoreService.Address[] AddressInfo, string UserToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IobjectServicesWebappVer2/UpdateContactbyProfileId", ReplyAction="http://tempuri.org/IobjectServicesWebappVer2/UpdateContactbyProfileIdResponse")]
        void UpdateContactbyProfileId(int ProfileId, Business.CoreService.Contact ContactInfo, string UserToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IobjectServicesWebappVer2/UpdateEdubyProfileId", ReplyAction="http://tempuri.org/IobjectServicesWebappVer2/UpdateEdubyProfileIdResponse")]
        void UpdateEdubyProfileId(int ProfileId, Business.CoreService.SchoolInfo[] Education, string UserToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IobjectServicesWebappVer2/UpdateOtherProfilebyId", ReplyAction="http://tempuri.org/IobjectServicesWebappVer2/UpdateOtherProfilebyIdResponse")]
        void UpdateOtherProfilebyId(
                    int profileId, 
                    string ProfileType, 
                    int cityId, 
                    int stateId, 
                    int countryId, 
                    int locatedId, 
                    int categoryId, 
                    int subCategoryId, 
                    int LastLoginCityId, 
                    System.DateTime lastLoginDate, 
                    string AvalibleInfo, 
                    string prop, 
                    string NV1, 
                    string NV2, 
                    string NV3, 
                    string NV4, 
                    string NV5, 
                    string NV6, 
                    string UserToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IobjectServicesWebappVer2/UpdatePesonalProfilebyId", ReplyAction="http://tempuri.org/IobjectServicesWebappVer2/UpdatePesonalProfilebyIdResponse")]
        void UpdatePesonalProfilebyId(int ProfileId, Business.CoreService.PersonalProfile personalInfo, string UserToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IobjectServicesWebappVer2/InsertProfilebyId", ReplyAction="http://tempuri.org/IobjectServicesWebappVer2/InsertProfilebyIdResponse")]
        Business.CoreService.UserProfile InsertProfilebyId(
                    string ProfileType, 
                    int Cityid, 
                    int Stateid, 
                    int Countryid, 
                    int LocateId, 
                    int Categoryid, 
                    int SubCategoryid, 
                    Business.CoreService.SchoolInfo[] Education, 
                    Business.CoreService.Achivement[] Certification, 
                    Business.CoreService.Address[] Address, 
                    Business.CoreService.Contact ContactInfo, 
                    string AvalibilityInfo, 
                    Business.CoreService.PersonalProfile PersonalProfileInfo, 
                    string NV1, 
                    string NV2, 
                    string NV3, 
                    string NV4, 
                    string NV5, 
                    string NV6, 
                    string Prop, 
                    string SubjectId, 
                    string Usertoken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IobjectServicesWebappVer2/GetUserProfilebyId", ReplyAction="http://tempuri.org/IobjectServicesWebappVer2/GetUserProfilebyIdResponse")]
        Business.CoreService.UserProfile GetUserProfilebyId(string SubjectId, string UserToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IobjectServicesWebappVer2/GetLocation", ReplyAction="http://tempuri.org/IobjectServicesWebappVer2/GetLocationResponse")]
        string[] GetLocation(string IpAddress, string UserToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IobjectServicesWebappVer2/GetUserbyId", ReplyAction="http://tempuri.org/IobjectServicesWebappVer2/GetUserbyIdResponse")]
        Business.CoreService.User GetUserbyId(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IobjectServicesWebappVer2/GetSearchUsers", ReplyAction="http://tempuri.org/IobjectServicesWebappVer2/GetSearchUsersResponse")]
        Business.CoreService.User[] GetSearchUsers(string since, string keywords, string objecttype, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IobjectServicesWebappVer2/DeleteUser", ReplyAction="http://tempuri.org/IobjectServicesWebappVer2/DeleteUserResponse")]
        bool DeleteUser(string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IobjectServicesWebappVer2/UpdateUser", ReplyAction="http://tempuri.org/IobjectServicesWebappVer2/UpdateUserResponse")]
        bool UpdateUser(string usrId, string email, string password, string objecttype, string title, string Logintype, string ImageUrl, string Firstname, string lastname, string prop, string deleted);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IobjectServicesWebappVer2/Changepassword", ReplyAction="http://tempuri.org/IobjectServicesWebappVer2/ChangepasswordResponse")]
        bool Changepassword(string oldPassword, string newPassword, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IobjectServicesWebappVer2/GetComments", ReplyAction="http://tempuri.org/IobjectServicesWebappVer2/GetCommentsResponse")]
        Business.CoreService.Comment[] GetComments(string SubjectId, string SubjectType, string parentId, string objType, int visibility, string UserToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IobjectServicesWebappVer2/InsertComment", ReplyAction="http://tempuri.org/IobjectServicesWebappVer2/InsertCommentResponse")]
        void InsertComment(string SubjectId, string SubjectType, string parentId, string objType, string Des, int visibility, string prop, string UserToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IobjectServicesWebappVer2/UpdateComment", ReplyAction="http://tempuri.org/IobjectServicesWebappVer2/UpdateCommentResponse")]
        void UpdateComment(int CommentId, string SubjectId, string SubjectType, string parentId, string objType, string Des, int visibility, string prop, string UserToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IobjectServicesWebappVer2/GetReciviedMesages", ReplyAction="http://tempuri.org/IobjectServicesWebappVer2/GetReciviedMesagesResponse")]
        Business.CoreService.Mesage[] GetReciviedMesages(string since, string sendorid, string objecttype, string expiryTime, string downPlayTime, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IobjectServicesWebappVer2/CreateMesageMaster", ReplyAction="http://tempuri.org/IobjectServicesWebappVer2/CreateMesageMasterResponse")]
        Business.CoreService.MesageMaster CreateMesageMaster(string message, string sendorId, string MessageTime, string ExpiryTime, string recipients, string messagetype, string subject, string downPlayTime, string sendertype, string recipienttype, string MasterParentId, string InvitationParentid, string prop, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IobjectServicesWebappVer2/RemoveMesageMaster", ReplyAction="http://tempuri.org/IobjectServicesWebappVer2/RemoveMesageMasterResponse")]
        bool RemoveMesageMaster(string messagemasterid, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IobjectServicesWebappVer2/RespondMesage", ReplyAction="http://tempuri.org/IobjectServicesWebappVer2/RespondMesageResponse")]
        bool RespondMesage(string messageid, string responsedata, string downPlayTime, string prop, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IobjectServicesWebappVer2/AddMesageRecipients", ReplyAction="http://tempuri.org/IobjectServicesWebappVer2/AddMesageRecipientsResponse")]
        bool AddMesageRecipients(string messageid, string recipients, string type, string sendertype, string recipienttype, string InvitationParentId, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IobjectServicesWebappVer2/GetMesageRecipients", ReplyAction="http://tempuri.org/IobjectServicesWebappVer2/GetMesageRecipientsResponse")]
        Business.CoreService.User[] GetMesageRecipients(string messageid, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IobjectServicesWebappVer2/GetAllMesages", ReplyAction="http://tempuri.org/IobjectServicesWebappVer2/GetAllMesagesResponse")]
        Business.CoreService.Mesage[] GetAllMesages(string since, string sendorid, string objecttype, string expiryTime, string downPlayTime, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IobjectServicesWebappVer2/UpdateMesageStatus", ReplyAction="http://tempuri.org/IobjectServicesWebappVer2/UpdateMesageStatusResponse")]
        void UpdateMesageStatus(string messageId, string status, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IobjectServicesWebappVer2/GetReciviedFeeds", ReplyAction="http://tempuri.org/IobjectServicesWebappVer2/GetReciviedFeedsResponse")]
        Business.CoreService.Feed[] GetReciviedFeeds(string since, string sendorid, string objecttype, string expiryTime, string downPlayTime, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IobjectServicesWebappVer2/CreateFeedMaster", ReplyAction="http://tempuri.org/IobjectServicesWebappVer2/CreateFeedMasterResponse")]
        Business.CoreService.FeedMaster CreateFeedMaster(string feed, string sendorId, string expiryTime, string recipients, string messagetype, string subject, string downPlayTime, string sendertype, string recipienttype, string MasterParentId, string InvitationParentid, string prop, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IobjectServicesWebappVer2/GetFeedRecipients", ReplyAction="http://tempuri.org/IobjectServicesWebappVer2/GetFeedRecipientsResponse")]
        Business.CoreService.User[] GetFeedRecipients(string feedid, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IobjectServicesWebappVer2/GetAllFeeds", ReplyAction="http://tempuri.org/IobjectServicesWebappVer2/GetAllFeedsResponse")]
        Business.CoreService.Feed[] GetAllFeeds(string since, string sendorid, string objecttype, string expiryTime, string downPlayTime, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IobjectServicesWebappVer2/UpdateFeedStatus", ReplyAction="http://tempuri.org/IobjectServicesWebappVer2/UpdateFeedStatusResponse")]
        void UpdateFeedStatus(string feedId, string status, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IobjectServicesWebappVer2/GetReciviedInvitations", ReplyAction="http://tempuri.org/IobjectServicesWebappVer2/GetReciviedInvitationsResponse")]
        Business.CoreService.Invitation[] GetReciviedInvitations(string since, string sendorid, string objecttype, string expiryTime, string downPlayTime, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IobjectServicesWebappVer2/CreateInvitationMaster", ReplyAction="http://tempuri.org/IobjectServicesWebappVer2/CreateInvitationMasterResponse")]
        Business.CoreService.InvitationMaster CreateInvitationMaster(string Invitation, string sendorId, string expiryTime, string recipients, string messagetype, string subject, string downPlayTime, string sendertype, string recipienttype, string MasterParentId, string InvitationParentid, string prop, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IobjectServicesWebappVer2/GetInvitationRecipients", ReplyAction="http://tempuri.org/IobjectServicesWebappVer2/GetInvitationRecipientsResponse")]
        Business.CoreService.User[] GetInvitationRecipients(string Invitationid, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IobjectServicesWebappVer2/GetAllInvitations", ReplyAction="http://tempuri.org/IobjectServicesWebappVer2/GetAllInvitationsResponse")]
        Business.CoreService.Invitation[] GetAllInvitations(string since, string sendorid, string objecttype, string expiryTime, string downPlayTime, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IobjectServicesWebappVer2/UpdateInvitationStatus", ReplyAction="http://tempuri.org/IobjectServicesWebappVer2/UpdateInvitationStatusResponse")]
        void UpdateInvitationStatus(string InvitationId, string status, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IobjectServicesWebappVer2/GetReciviedGeneralMessages", ReplyAction="http://tempuri.org/IobjectServicesWebappVer2/GetReciviedGeneralMessagesResponse")]
        Business.CoreService.GeneralMessage[] GetReciviedGeneralMessages(string since, string sendorid, string objecttype, string expiryTime, string downPlayTime, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IobjectServicesWebappVer2/CreateGeneralMessageMaster", ReplyAction="http://tempuri.org/IobjectServicesWebappVer2/CreateGeneralMessageMasterResponse")]
        Business.CoreService.GeneralMessageMaster CreateGeneralMessageMaster(string GeneralMessage, string sendorId, string expiryTime, string recipients, string messagetype, string subject, string downPlayTime, string sendertype, string recipienttype, string MasterParentId, string InvitationParentid, string prop, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IobjectServicesWebappVer2/GetGeneralMessageRecipients", ReplyAction="http://tempuri.org/IobjectServicesWebappVer2/GetGeneralMessageRecipientsResponse")]
        Business.CoreService.User[] GetGeneralMessageRecipients(string GeneralMessageid, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IobjectServicesWebappVer2/GetAllGeneralMessages", ReplyAction="http://tempuri.org/IobjectServicesWebappVer2/GetAllGeneralMessagesResponse")]
        Business.CoreService.GeneralMessage[] GetAllGeneralMessages(string since, string sendorid, string objecttype, string expiryTime, string downPlayTime, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IobjectServicesWebappVer2/UpdateGeneralMessageStatus", ReplyAction="http://tempuri.org/IobjectServicesWebappVer2/UpdateGeneralMessageStatusResponse")]
        void UpdateGeneralMessageStatus(string GeneralMessageId, string status, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IobjectServicesWebappVer2/GetFilesbyUserId", ReplyAction="http://tempuri.org/IobjectServicesWebappVer2/GetFilesbyUserIdResponse")]
        Business.CoreService.MyFile[] GetFilesbyUserId(string since, string parentid, string objecttype, string sourceId, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IobjectServicesWebappVer2/GetFriendFriends", ReplyAction="http://tempuri.org/IobjectServicesWebappVer2/GetFriendFriendsResponse")]
        Business.CoreService.Friend[] GetFriendFriends(string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IobjectServicesWebappVer2/GetDList", ReplyAction="http://tempuri.org/IobjectServicesWebappVer2/GetDListResponse")]
        Business.CoreService.MList[] GetDList(string type, string objecttype, string parentId, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IobjectServicesWebappVer2/CreateDList", ReplyAction="http://tempuri.org/IobjectServicesWebappVer2/CreateDListResponse")]
        Business.CoreService.MList CreateDList(string name, string parentId, string objecttype, string type, string prop, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IobjectServicesWebappVer2/UpdateDList", ReplyAction="http://tempuri.org/IobjectServicesWebappVer2/UpdateDListResponse")]
        Business.CoreService.MList UpdateDList(int Id, string listId, string name, string parentId, string objecttype, string prop, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IobjectServicesWebappVer2/RemoveDList", ReplyAction="http://tempuri.org/IobjectServicesWebappVer2/RemoveDListResponse")]
        int RemoveDList(string listId, string parentId, string title, string objecttype, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IobjectServicesWebappVer2/UpdateGroup", ReplyAction="http://tempuri.org/IobjectServicesWebappVer2/UpdateGroupResponse")]
        bool UpdateGroup(string groupId, string title, string prop, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IobjectServicesWebappVer2/GetWriteFileSimple", ReplyAction="http://tempuri.org/IobjectServicesWebappVer2/GetWriteFileSimpleResponse")]
        Business.CoreService.ResourceToken GetWriteFileSimple(string objecttype, string filename, string title, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IobjectServicesWebappVer2/GetMyContent", ReplyAction="http://tempuri.org/IobjectServicesWebappVer2/GetMyContentResponse")]
        Business.CoreService.ResourceToken[] GetMyContent(string objecttype, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IobjectServicesWebappVer2/GetAddresses", ReplyAction="http://tempuri.org/IobjectServicesWebappVer2/GetAddressesResponse")]
        Business.CoreService.Address[] GetAddresses(string addressId, string subjectId, string subjectType, string addressTypeId, string addressSubTypeId, string cityId, string localityId, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IobjectServicesWebappVer2/CreateAddress", ReplyAction="http://tempuri.org/IobjectServicesWebappVer2/CreateAddressResponse")]
        Business.CoreService.Address CreateAddress(
                    string subjectId, 
                    string subjectType, 
                    string addressTypeId, 
                    string addressSubTypeId, 
                    string Line1, 
                    string Line2, 
                    string zipcode, 
                    string cityId, 
                    string cityName, 
                    string cityLatitude, 
                    string cityLogitude, 
                    string localityId, 
                    string localityName, 
                    string localityLatitude, 
                    string localityLagitude, 
                    string country, 
                    string State, 
                    string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IobjectServicesWebappVer2/UpdateAddress", ReplyAction="http://tempuri.org/IobjectServicesWebappVer2/UpdateAddressResponse")]
        Business.CoreService.Address UpdateAddress(
                    string addressId, 
                    string addressTypeId, 
                    string addressSubTypeId, 
                    string Line1, 
                    string Line2, 
                    string zipcode, 
                    string cityId, 
                    string cityName, 
                    string cityLatitude, 
                    string cityLogitude, 
                    string localityId, 
                    string localityName, 
                    string localityLatitude, 
                    string localityLagitude, 
                    string country, 
                    string State, 
                    string Status, 
                    string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IobjectServicesWebappVer2/SearchAddressesByKeywords", ReplyAction="http://tempuri.org/IobjectServicesWebappVer2/SearchAddressesByKeywordsResponse")]
        Business.CoreService.Address[] SearchAddressesByKeywords(string cityId, string addressTypeId, Business.CoreService.Subject subjectType, string[] addressSubTypeId, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IobjectServicesWebappVer2/SearchProfileByKeywords", ReplyAction="http://tempuri.org/IobjectServicesWebappVer2/SearchProfileByKeywordsResponse")]
        Business.CoreService.UserProfile[] SearchProfileByKeywords(string cityId, string addressTypeId, string[] addressSubTypeId, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IobjectServicesWebappVer2/GetListContent", ReplyAction="http://tempuri.org/IobjectServicesWebappVer2/GetListContentResponse")]
        Business.CoreService.ResourceToken[] GetListContent(string since, string parentId, string objecttype, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IobjectServicesWebappVer2/DeleteRelation", ReplyAction="http://tempuri.org/IobjectServicesWebappVer2/DeleteRelationResponse")]
        int DeleteRelation(string childId, string parentId, string userid, string objecttype, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IobjectServicesWebappVer2/GetMimeType", ReplyAction="http://tempuri.org/IobjectServicesWebappVer2/GetMimeTypeResponse")]
        string GetMimeType(string FileName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IobjectServicesWebappVer2Channel : Business.CoreService.IobjectServicesWebappVer2, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IobjectServicesWebappVer2Client : System.ServiceModel.ClientBase<Business.CoreService.IobjectServicesWebappVer2>, Business.CoreService.IobjectServicesWebappVer2 {
        
        public IobjectServicesWebappVer2Client() {
        }
        
        public IobjectServicesWebappVer2Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public IobjectServicesWebappVer2Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IobjectServicesWebappVer2Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IobjectServicesWebappVer2Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Business.CoreService.User HelloWorld(string name, int type) {
            return base.Channel.HelloWorld(name, type);
        }
        
        public Business.CoreService.ResourceToken GetReadFile(string ContentId, string userToken) {
            return base.Channel.GetReadFile(ContentId, userToken);
        }
        
        public Business.CoreService.ResourceToken GetWriteFile(string objecttype, string Filename, string title, string userToken) {
            return base.Channel.GetWriteFile(objecttype, Filename, title, userToken);
        }
        
        public bool SetWriteSuccess(string ContentId, string userToken) {
            return base.Channel.SetWriteSuccess(ContentId, userToken);
        }
        
        public bool DeleteFile(string ContentId, string userToken) {
            return base.Channel.DeleteFile(ContentId, userToken);
        }
        
        public Business.CoreService.MyFolder[] GetMyFolders(string since, string parentid, string objecttype, string userToken) {
            return base.Channel.GetMyFolders(since, parentid, objecttype, userToken);
        }
        
        public Business.CoreService.MyFile[] GetMyFiles(string since, string parentid, string objecttype, string userToken) {
            return base.Channel.GetMyFiles(since, parentid, objecttype, userToken);
        }
        
        public Business.CoreService.MyFolder[] GetSharedFolders(string since, string objecttype, string userToken) {
            return base.Channel.GetSharedFolders(since, objecttype, userToken);
        }
        
        public Business.CoreService.MyFile[] GetSharedFiles(string since, string objecttype, string userToken) {
            return base.Channel.GetSharedFiles(since, objecttype, userToken);
        }
        
        public Business.CoreService.MyFolder CreateFolder(string name, string parentId, string objecttype, string prop, string userToken) {
            return base.Channel.CreateFolder(name, parentId, objecttype, prop, userToken);
        }
        
        public Business.CoreService.MyFile AddFile(string ResourceId, string name, string parentId, string objecttype, string prop, string userToken) {
            return base.Channel.AddFile(ResourceId, name, parentId, objecttype, prop, userToken);
        }
        
        public bool RenameFolderItem(string itemid, string name, string userToken) {
            return base.Channel.RenameFolderItem(itemid, name, userToken);
        }
        
        public bool MoveFolderItem(string itemid, string toid, string userToken) {
            return base.Channel.MoveFolderItem(itemid, toid, userToken);
        }
        
        public bool RemoveFolderItem(string itemid, string userToken) {
            return base.Channel.RemoveFolderItem(itemid, userToken);
        }
        
        public bool UpdateFolderProperties(string itemid, string prop, string userToken) {
            return base.Channel.UpdateFolderProperties(itemid, prop, userToken);
        }
        
        public Business.CoreService.Message[] GetNotifications(string since, string sendorid, string objecttype, string expiryTime, string downPlayTime, string userToken) {
            return base.Channel.GetNotifications(since, sendorid, objecttype, expiryTime, downPlayTime, userToken);
        }
        
        public Business.CoreService.MessageMaster CreateNotificationMaster(string message, string sendorId, string MessageTime, string ExpiryTime, string recipients, string messagetype, string subject, string downPlayTime, string prop, string userToken) {
            return base.Channel.CreateNotificationMaster(message, sendorId, MessageTime, ExpiryTime, recipients, messagetype, subject, downPlayTime, prop, userToken);
        }
        
        public bool RemoveNotificationMaster(string messagemasterid, string userToken) {
            return base.Channel.RemoveNotificationMaster(messagemasterid, userToken);
        }
        
        public bool RespondNotification(string messageid, string responsedata, string downPlayTime, string prop, string userToken) {
            return base.Channel.RespondNotification(messageid, responsedata, downPlayTime, prop, userToken);
        }
        
        public bool AddNotificationRecipients(string messageid, string recipients, string type, string userToken) {
            return base.Channel.AddNotificationRecipients(messageid, recipients, type, userToken);
        }
        
        public Business.CoreService.User[] GetNotificationRecipients(string messageid, string userToken) {
            return base.Channel.GetNotificationRecipients(messageid, userToken);
        }
        
        public string Login(string UserName, string Password, string ServiceName) {
            return base.Channel.Login(UserName, Password, ServiceName);
        }
        
        public string RegisterUser(string email, string password, string objecttype, string title, string logintype, string imageUrl, string Firstname, string lastName) {
            return base.Channel.RegisterUser(email, password, objecttype, title, logintype, imageUrl, Firstname, lastName);
        }
        
        public Business.CoreService.User GetUserObject(string userToken) {
            return base.Channel.GetUserObject(userToken);
        }
        
        public string LogOut(string userToken) {
            return base.Channel.LogOut(userToken);
        }
        
        public Business.CoreService.User[] GetUsers(string since, string objecttype, string userToken) {
            return base.Channel.GetUsers(since, objecttype, userToken);
        }
        
        public string ValidateUser(string email, string uniqueid) {
            return base.Channel.ValidateUser(email, uniqueid);
        }
        
        public string AuthenticateUser(string email, string uniqueid, string cpuid) {
            return base.Channel.AuthenticateUser(email, uniqueid, cpuid);
        }
        
        public bool PublishResourceGroup(string groupid, string resourceid, string userToken) {
            return base.Channel.PublishResourceGroup(groupid, resourceid, userToken);
        }
        
        public bool UnPublishResourceGroup(string groupid, string resourceid, string userToken) {
            return base.Channel.UnPublishResourceGroup(groupid, resourceid, userToken);
        }
        
        public Business.CoreService.Content[] GetPublishedResources(string groupid, string userToken) {
            return base.Channel.GetPublishedResources(groupid, userToken);
        }
        
        public Business.CoreService.Content[] GetMyPublishedResources(string groupid, string userToken) {
            return base.Channel.GetMyPublishedResources(groupid, userToken);
        }
        
        public string LoginNetworkApp(string UserName, string Password, string ServiceName, string networkid, string appid) {
            return base.Channel.LoginNetworkApp(UserName, Password, ServiceName, networkid, appid);
        }
        
        public string RegisterNetworkAppUser(string email, string password, string networkid, string appid, string objecttype, string title) {
            return base.Channel.RegisterNetworkAppUser(email, password, networkid, appid, objecttype, title);
        }
        
        public string RegisterNetworkUser(string email, string password, string networkid, string objecttype, string title) {
            return base.Channel.RegisterNetworkUser(email, password, networkid, objecttype, title);
        }
        
        public string LoginNetwork(string UserName, string Password, string ServiceName, string NetworkId) {
            return base.Channel.LoginNetwork(UserName, Password, ServiceName, NetworkId);
        }
        
        public Business.CoreService.User[] GetAccessibleUsers(string since, string objectid, string objecttype, string userToken) {
            return base.Channel.GetAccessibleUsers(since, objectid, objecttype, userToken);
        }
        
        public string[] GetAccessibleObjects(string since, string userToken) {
            return base.Channel.GetAccessibleObjects(since, userToken);
        }
        
        public bool IsObjectAccessible(string objectid, Business.CoreService.Permission permission, string userToken) {
            return base.Channel.IsObjectAccessible(objectid, permission, userToken);
        }
        
        public bool GrantPermission(string objectid, string userid, Business.CoreService.Permission permission, string userToken) {
            return base.Channel.GrantPermission(objectid, userid, permission, userToken);
        }
        
        public Business.CoreService.Group[] GetGroups(string since, string parentid, string objecttype, string userToken) {
            return base.Channel.GetGroups(since, parentid, objecttype, userToken);
        }
        
        public Business.CoreService.Group[] GetMyGroups(string since, string parentid, string objecttype, string userToken) {
            return base.Channel.GetMyGroups(since, parentid, objecttype, userToken);
        }
        
        public Business.CoreService.Group CreateGroup(string name, string parentid, string objecttype, string prop, bool autoSubScribe, string userToken) {
            return base.Channel.CreateGroup(name, parentid, objecttype, prop, autoSubScribe, userToken);
        }
        
        public bool RemoveGroup(string groupid, string userToken) {
            return base.Channel.RemoveGroup(groupid, userToken);
        }
        
        public Business.CoreService.User[] GetGroupMembers(string groupid, string since, string userToken) {
            return base.Channel.GetGroupMembers(groupid, since, userToken);
        }
        
        public bool RequestGroupSubscription(string groupid, string userToken) {
            return base.Channel.RequestGroupSubscription(groupid, userToken);
        }
        
        public bool CancelRequestGroupSubscription(string groupid, string userToken) {
            return base.Channel.CancelRequestGroupSubscription(groupid, userToken);
        }
        
        public Business.CoreService.User[] GetGroupPendingSubscriptionRequests(string groupid, string userToken) {
            return base.Channel.GetGroupPendingSubscriptionRequests(groupid, userToken);
        }
        
        public bool ApproveGroupSubscription(string groupid, string userid, string userToken) {
            return base.Channel.ApproveGroupSubscription(groupid, userid, userToken);
        }
        
        public bool DisApproveGroupSubscription(string groupid, string userid, string userToken) {
            return base.Channel.DisApproveGroupSubscription(groupid, userid, userToken);
        }
        
        public bool InviteGroupSubscription(string groupid, string userid, string userToken) {
            return base.Channel.InviteGroupSubscription(groupid, userid, userToken);
        }
        
        public bool CancelInviteGroupSubscription(string groupid, string userid, string userToken) {
            return base.Channel.CancelInviteGroupSubscription(groupid, userid, userToken);
        }
        
        public Business.CoreService.Group[] GetGroupPendingSubscriptionInvitations(string groupid, string userToken) {
            return base.Channel.GetGroupPendingSubscriptionInvitations(groupid, userToken);
        }
        
        public bool AcceptInviteGroupSubscription(string groupid, string userToken) {
            return base.Channel.AcceptInviteGroupSubscription(groupid, userToken);
        }
        
        public bool RejectInviteGroupSubscription(string groupid, string userToken) {
            return base.Channel.RejectInviteGroupSubscription(groupid, userToken);
        }
        
        public Business.CoreService.Relation[] GetChildren(string since, string objecttype, string parentId, string userToken) {
            return base.Channel.GetChildren(since, objecttype, parentId, userToken);
        }
        
        public Business.CoreService.Relation[] GetParents(string since, string objecttype, string objectid, string userToken) {
            return base.Channel.GetParents(since, objecttype, objectid, userToken);
        }
        
        public Business.CoreService.Relation AddRelation(string parentId, string childId, string objecttype, string userToken) {
            return base.Channel.AddRelation(parentId, childId, objecttype, userToken);
        }
        
        public bool RemoveRelation(string parentId, string childId, string objecttype, string userToken) {
            return base.Channel.RemoveRelation(parentId, childId, objecttype, userToken);
        }
        
        public Business.CoreService.MList[] GetStaticdata(string type, string objecttype, string parentId, string userToken) {
            return base.Channel.GetStaticdata(type, objecttype, parentId, userToken);
        }
        
        public Business.CoreService.MList CreateStaticdata(string name, string parentId, string objecttype, string type, string prop, string userToken) {
            return base.Channel.CreateStaticdata(name, parentId, objecttype, type, prop, userToken);
        }
        
        public bool ShareFile(string fileid, string userid, string userToken) {
            return base.Channel.ShareFile(fileid, userid, userToken);
        }
        
        public bool ShareFolder(string folderid, string userid, Business.CoreService.Permission permission, string userToken) {
            return base.Channel.ShareFolder(folderid, userid, permission, userToken);
        }
        
        public bool UnShareFile(string fileid, string userid, string userToken) {
            return base.Channel.UnShareFile(fileid, userid, userToken);
        }
        
        public bool UnShareFolder(string folderid, string userid, string userToken) {
            return base.Channel.UnShareFolder(folderid, userid, userToken);
        }
        
        public Business.CoreService.User[] GetFileSharingUsers(string fileid, string userToken) {
            return base.Channel.GetFileSharingUsers(fileid, userToken);
        }
        
        public Business.CoreService.User[] GetFolderSharingUsers(string folderid, string userToken) {
            return base.Channel.GetFolderSharingUsers(folderid, userToken);
        }
        
        public Business.CoreService.ActivityStream CreateActivityMaster(string text, string TargetId, string activitytime, string subject, string objecttype, string userToken) {
            return base.Channel.CreateActivityMaster(text, TargetId, activitytime, subject, objecttype, userToken);
        }
        
        public bool DeleteActivityMaster(string activitymasterid, string userToken) {
            return base.Channel.DeleteActivityMaster(activitymasterid, userToken);
        }
        
        public bool DeleteActivityStream(string activitystreamid, string userToken) {
            return base.Channel.DeleteActivityStream(activitystreamid, userToken);
        }
        
        public Business.CoreService.ActivityStream[] GetMyActivity(string since, string objecttype, string userToken) {
            return base.Channel.GetMyActivity(since, objecttype, userToken);
        }
        
        public Business.CoreService.ActivityStream[] GetActivityStream(string since, string objecttype, string recipientid, string userToken) {
            return base.Channel.GetActivityStream(since, objecttype, recipientid, userToken);
        }
        
        public string GetFBRedirectUrl(string RedirectUrl) {
            return base.Channel.GetFBRedirectUrl(RedirectUrl);
        }
        
        public string GetFBToken(string RequestCode, string CallBackURl) {
            return base.Channel.GetFBToken(RequestCode, CallBackURl);
        }
        
        public bool CreateFBFeed(string Token, string msg) {
            return base.Channel.CreateFBFeed(Token, msg);
        }
        
        public Business.CoreService.User[] GetUserFriendsList(string Token) {
            return base.Channel.GetUserFriendsList(Token);
        }
        
        public Business.CoreService.User GetUserDetails(string Token) {
            return base.Channel.GetUserDetails(Token);
        }
        
        public string GettestFBRedirectUrl(string RedirectUrl) {
            return base.Channel.GettestFBRedirectUrl(RedirectUrl);
        }
        
        public string FBLogout(string RedirectUrl, string token) {
            return base.Channel.FBLogout(RedirectUrl, token);
        }
        
        public Business.CoreService.ResourceToken CreateVideoFile(string objecttype, string filename, string title, string storageId, string userToken) {
            return base.Channel.CreateVideoFile(objecttype, filename, title, storageId, userToken);
        }
        
        public Business.CoreService.UserProfile InsertProfile(
                    string ProfileType, 
                    int Cityid, 
                    int Stateid, 
                    int Countryid, 
                    int LocateId, 
                    int Categoryid, 
                    int SubCategoryid, 
                    Business.CoreService.SchoolInfo[] Education, 
                    Business.CoreService.Achivement[] Certification, 
                    Business.CoreService.Address[] Address, 
                    Business.CoreService.Contact ContactInfo, 
                    string AvalibilityInfo, 
                    Business.CoreService.PersonalProfile PersonalProfileInfo, 
                    string NV1, 
                    string NV2, 
                    string NV3, 
                    string NV4, 
                    string NV5, 
                    string NV6, 
                    string Prop, 
                    string Usertoken) {
            return base.Channel.InsertProfile(ProfileType, Cityid, Stateid, Countryid, LocateId, Categoryid, SubCategoryid, Education, Certification, Address, ContactInfo, AvalibilityInfo, PersonalProfileInfo, NV1, NV2, NV3, NV4, NV5, NV6, Prop, Usertoken);
        }
        
        public Business.CoreService.UserProfile GetUserProfile(string UserToken) {
            return base.Channel.GetUserProfile(UserToken);
        }
        
        public Business.CoreService.UserProfile UpdateProfile(
                    int profileId, 
                    string ProfileType, 
                    int Cityid, 
                    int Stateid, 
                    int Countryid, 
                    int LocateId, 
                    int Categoryid, 
                    int SubCategoryid, 
                    Business.CoreService.SchoolInfo[] Education, 
                    Business.CoreService.Achivement[] Certification, 
                    Business.CoreService.Address[] Address, 
                    Business.CoreService.Contact ContactInfo, 
                    Business.CoreService.PersonalProfile personalInfo, 
                    string AvalibilityInfo, 
                    string Prop, 
                    string NV1, 
                    string NV2, 
                    string NV3, 
                    string NV4, 
                    string NV5, 
                    string NV6, 
                    string UserToken) {
            return base.Channel.UpdateProfile(profileId, ProfileType, Cityid, Stateid, Countryid, LocateId, Categoryid, SubCategoryid, Education, Certification, Address, ContactInfo, personalInfo, AvalibilityInfo, Prop, NV1, NV2, NV3, NV4, NV5, NV6, UserToken);
        }
        
        public void UpdateAchivementbyProfileId(int ProfileId, Business.CoreService.Achivement[] AchivementInfo, string UserToken) {
            base.Channel.UpdateAchivementbyProfileId(ProfileId, AchivementInfo, UserToken);
        }
        
        public void UpdateAddressbyProfileId(int ProfileId, Business.CoreService.Address[] AddressInfo, string UserToken) {
            base.Channel.UpdateAddressbyProfileId(ProfileId, AddressInfo, UserToken);
        }
        
        public void UpdateContactbyProfileId(int ProfileId, Business.CoreService.Contact ContactInfo, string UserToken) {
            base.Channel.UpdateContactbyProfileId(ProfileId, ContactInfo, UserToken);
        }
        
        public void UpdateEdubyProfileId(int ProfileId, Business.CoreService.SchoolInfo[] Education, string UserToken) {
            base.Channel.UpdateEdubyProfileId(ProfileId, Education, UserToken);
        }
        
        public void UpdateOtherProfilebyId(
                    int profileId, 
                    string ProfileType, 
                    int cityId, 
                    int stateId, 
                    int countryId, 
                    int locatedId, 
                    int categoryId, 
                    int subCategoryId, 
                    int LastLoginCityId, 
                    System.DateTime lastLoginDate, 
                    string AvalibleInfo, 
                    string prop, 
                    string NV1, 
                    string NV2, 
                    string NV3, 
                    string NV4, 
                    string NV5, 
                    string NV6, 
                    string UserToken) {
            base.Channel.UpdateOtherProfilebyId(profileId, ProfileType, cityId, stateId, countryId, locatedId, categoryId, subCategoryId, LastLoginCityId, lastLoginDate, AvalibleInfo, prop, NV1, NV2, NV3, NV4, NV5, NV6, UserToken);
        }
        
        public void UpdatePesonalProfilebyId(int ProfileId, Business.CoreService.PersonalProfile personalInfo, string UserToken) {
            base.Channel.UpdatePesonalProfilebyId(ProfileId, personalInfo, UserToken);
        }
        
        public Business.CoreService.UserProfile InsertProfilebyId(
                    string ProfileType, 
                    int Cityid, 
                    int Stateid, 
                    int Countryid, 
                    int LocateId, 
                    int Categoryid, 
                    int SubCategoryid, 
                    Business.CoreService.SchoolInfo[] Education, 
                    Business.CoreService.Achivement[] Certification, 
                    Business.CoreService.Address[] Address, 
                    Business.CoreService.Contact ContactInfo, 
                    string AvalibilityInfo, 
                    Business.CoreService.PersonalProfile PersonalProfileInfo, 
                    string NV1, 
                    string NV2, 
                    string NV3, 
                    string NV4, 
                    string NV5, 
                    string NV6, 
                    string Prop, 
                    string SubjectId, 
                    string Usertoken) {
            return base.Channel.InsertProfilebyId(ProfileType, Cityid, Stateid, Countryid, LocateId, Categoryid, SubCategoryid, Education, Certification, Address, ContactInfo, AvalibilityInfo, PersonalProfileInfo, NV1, NV2, NV3, NV4, NV5, NV6, Prop, SubjectId, Usertoken);
        }
        
        public Business.CoreService.UserProfile GetUserProfilebyId(string SubjectId, string UserToken) {
            return base.Channel.GetUserProfilebyId(SubjectId, UserToken);
        }
        
        public string[] GetLocation(string IpAddress, string UserToken) {
            return base.Channel.GetLocation(IpAddress, UserToken);
        }
        
        public Business.CoreService.User GetUserbyId(string userId) {
            return base.Channel.GetUserbyId(userId);
        }
        
        public Business.CoreService.User[] GetSearchUsers(string since, string keywords, string objecttype, string userToken) {
            return base.Channel.GetSearchUsers(since, keywords, objecttype, userToken);
        }
        
        public bool DeleteUser(string userToken) {
            return base.Channel.DeleteUser(userToken);
        }
        
        public bool UpdateUser(string usrId, string email, string password, string objecttype, string title, string Logintype, string ImageUrl, string Firstname, string lastname, string prop, string deleted) {
            return base.Channel.UpdateUser(usrId, email, password, objecttype, title, Logintype, ImageUrl, Firstname, lastname, prop, deleted);
        }
        
        public bool Changepassword(string oldPassword, string newPassword, string userToken) {
            return base.Channel.Changepassword(oldPassword, newPassword, userToken);
        }
        
        public Business.CoreService.Comment[] GetComments(string SubjectId, string SubjectType, string parentId, string objType, int visibility, string UserToken) {
            return base.Channel.GetComments(SubjectId, SubjectType, parentId, objType, visibility, UserToken);
        }
        
        public void InsertComment(string SubjectId, string SubjectType, string parentId, string objType, string Des, int visibility, string prop, string UserToken) {
            base.Channel.InsertComment(SubjectId, SubjectType, parentId, objType, Des, visibility, prop, UserToken);
        }
        
        public void UpdateComment(int CommentId, string SubjectId, string SubjectType, string parentId, string objType, string Des, int visibility, string prop, string UserToken) {
            base.Channel.UpdateComment(CommentId, SubjectId, SubjectType, parentId, objType, Des, visibility, prop, UserToken);
        }
        
        public Business.CoreService.Mesage[] GetReciviedMesages(string since, string sendorid, string objecttype, string expiryTime, string downPlayTime, string userToken) {
            return base.Channel.GetReciviedMesages(since, sendorid, objecttype, expiryTime, downPlayTime, userToken);
        }
        
        public Business.CoreService.MesageMaster CreateMesageMaster(string message, string sendorId, string MessageTime, string ExpiryTime, string recipients, string messagetype, string subject, string downPlayTime, string sendertype, string recipienttype, string MasterParentId, string InvitationParentid, string prop, string userToken) {
            return base.Channel.CreateMesageMaster(message, sendorId, MessageTime, ExpiryTime, recipients, messagetype, subject, downPlayTime, sendertype, recipienttype, MasterParentId, InvitationParentid, prop, userToken);
        }
        
        public bool RemoveMesageMaster(string messagemasterid, string userToken) {
            return base.Channel.RemoveMesageMaster(messagemasterid, userToken);
        }
        
        public bool RespondMesage(string messageid, string responsedata, string downPlayTime, string prop, string userToken) {
            return base.Channel.RespondMesage(messageid, responsedata, downPlayTime, prop, userToken);
        }
        
        public bool AddMesageRecipients(string messageid, string recipients, string type, string sendertype, string recipienttype, string InvitationParentId, string userToken) {
            return base.Channel.AddMesageRecipients(messageid, recipients, type, sendertype, recipienttype, InvitationParentId, userToken);
        }
        
        public Business.CoreService.User[] GetMesageRecipients(string messageid, string userToken) {
            return base.Channel.GetMesageRecipients(messageid, userToken);
        }
        
        public Business.CoreService.Mesage[] GetAllMesages(string since, string sendorid, string objecttype, string expiryTime, string downPlayTime, string userToken) {
            return base.Channel.GetAllMesages(since, sendorid, objecttype, expiryTime, downPlayTime, userToken);
        }
        
        public void UpdateMesageStatus(string messageId, string status, string userToken) {
            base.Channel.UpdateMesageStatus(messageId, status, userToken);
        }
        
        public Business.CoreService.Feed[] GetReciviedFeeds(string since, string sendorid, string objecttype, string expiryTime, string downPlayTime, string userToken) {
            return base.Channel.GetReciviedFeeds(since, sendorid, objecttype, expiryTime, downPlayTime, userToken);
        }
        
        public Business.CoreService.FeedMaster CreateFeedMaster(string feed, string sendorId, string expiryTime, string recipients, string messagetype, string subject, string downPlayTime, string sendertype, string recipienttype, string MasterParentId, string InvitationParentid, string prop, string userToken) {
            return base.Channel.CreateFeedMaster(feed, sendorId, expiryTime, recipients, messagetype, subject, downPlayTime, sendertype, recipienttype, MasterParentId, InvitationParentid, prop, userToken);
        }
        
        public Business.CoreService.User[] GetFeedRecipients(string feedid, string userToken) {
            return base.Channel.GetFeedRecipients(feedid, userToken);
        }
        
        public Business.CoreService.Feed[] GetAllFeeds(string since, string sendorid, string objecttype, string expiryTime, string downPlayTime, string userToken) {
            return base.Channel.GetAllFeeds(since, sendorid, objecttype, expiryTime, downPlayTime, userToken);
        }
        
        public void UpdateFeedStatus(string feedId, string status, string userToken) {
            base.Channel.UpdateFeedStatus(feedId, status, userToken);
        }
        
        public Business.CoreService.Invitation[] GetReciviedInvitations(string since, string sendorid, string objecttype, string expiryTime, string downPlayTime, string userToken) {
            return base.Channel.GetReciviedInvitations(since, sendorid, objecttype, expiryTime, downPlayTime, userToken);
        }
        
        public Business.CoreService.InvitationMaster CreateInvitationMaster(string Invitation, string sendorId, string expiryTime, string recipients, string messagetype, string subject, string downPlayTime, string sendertype, string recipienttype, string MasterParentId, string InvitationParentid, string prop, string userToken) {
            return base.Channel.CreateInvitationMaster(Invitation, sendorId, expiryTime, recipients, messagetype, subject, downPlayTime, sendertype, recipienttype, MasterParentId, InvitationParentid, prop, userToken);
        }
        
        public Business.CoreService.User[] GetInvitationRecipients(string Invitationid, string userToken) {
            return base.Channel.GetInvitationRecipients(Invitationid, userToken);
        }
        
        public Business.CoreService.Invitation[] GetAllInvitations(string since, string sendorid, string objecttype, string expiryTime, string downPlayTime, string userToken) {
            return base.Channel.GetAllInvitations(since, sendorid, objecttype, expiryTime, downPlayTime, userToken);
        }
        
        public void UpdateInvitationStatus(string InvitationId, string status, string userToken) {
            base.Channel.UpdateInvitationStatus(InvitationId, status, userToken);
        }
        
        public Business.CoreService.GeneralMessage[] GetReciviedGeneralMessages(string since, string sendorid, string objecttype, string expiryTime, string downPlayTime, string userToken) {
            return base.Channel.GetReciviedGeneralMessages(since, sendorid, objecttype, expiryTime, downPlayTime, userToken);
        }
        
        public Business.CoreService.GeneralMessageMaster CreateGeneralMessageMaster(string GeneralMessage, string sendorId, string expiryTime, string recipients, string messagetype, string subject, string downPlayTime, string sendertype, string recipienttype, string MasterParentId, string InvitationParentid, string prop, string userToken) {
            return base.Channel.CreateGeneralMessageMaster(GeneralMessage, sendorId, expiryTime, recipients, messagetype, subject, downPlayTime, sendertype, recipienttype, MasterParentId, InvitationParentid, prop, userToken);
        }
        
        public Business.CoreService.User[] GetGeneralMessageRecipients(string GeneralMessageid, string userToken) {
            return base.Channel.GetGeneralMessageRecipients(GeneralMessageid, userToken);
        }
        
        public Business.CoreService.GeneralMessage[] GetAllGeneralMessages(string since, string sendorid, string objecttype, string expiryTime, string downPlayTime, string userToken) {
            return base.Channel.GetAllGeneralMessages(since, sendorid, objecttype, expiryTime, downPlayTime, userToken);
        }
        
        public void UpdateGeneralMessageStatus(string GeneralMessageId, string status, string userToken) {
            base.Channel.UpdateGeneralMessageStatus(GeneralMessageId, status, userToken);
        }
        
        public Business.CoreService.MyFile[] GetFilesbyUserId(string since, string parentid, string objecttype, string sourceId, string userToken) {
            return base.Channel.GetFilesbyUserId(since, parentid, objecttype, sourceId, userToken);
        }
        
        public Business.CoreService.Friend[] GetFriendFriends(string userToken) {
            return base.Channel.GetFriendFriends(userToken);
        }
        
        public Business.CoreService.MList[] GetDList(string type, string objecttype, string parentId, string userToken) {
            return base.Channel.GetDList(type, objecttype, parentId, userToken);
        }
        
        public Business.CoreService.MList CreateDList(string name, string parentId, string objecttype, string type, string prop, string userToken) {
            return base.Channel.CreateDList(name, parentId, objecttype, type, prop, userToken);
        }
        
        public Business.CoreService.MList UpdateDList(int Id, string listId, string name, string parentId, string objecttype, string prop, string userToken) {
            return base.Channel.UpdateDList(Id, listId, name, parentId, objecttype, prop, userToken);
        }
        
        public int RemoveDList(string listId, string parentId, string title, string objecttype, string userToken) {
            return base.Channel.RemoveDList(listId, parentId, title, objecttype, userToken);
        }
        
        public bool UpdateGroup(string groupId, string title, string prop, string userToken) {
            return base.Channel.UpdateGroup(groupId, title, prop, userToken);
        }
        
        public Business.CoreService.ResourceToken GetWriteFileSimple(string objecttype, string filename, string title, string userToken) {
            return base.Channel.GetWriteFileSimple(objecttype, filename, title, userToken);
        }
        
        public Business.CoreService.ResourceToken[] GetMyContent(string objecttype, string userToken) {
            return base.Channel.GetMyContent(objecttype, userToken);
        }
        
        public Business.CoreService.Address[] GetAddresses(string addressId, string subjectId, string subjectType, string addressTypeId, string addressSubTypeId, string cityId, string localityId, string userToken) {
            return base.Channel.GetAddresses(addressId, subjectId, subjectType, addressTypeId, addressSubTypeId, cityId, localityId, userToken);
        }
        
        public Business.CoreService.Address CreateAddress(
                    string subjectId, 
                    string subjectType, 
                    string addressTypeId, 
                    string addressSubTypeId, 
                    string Line1, 
                    string Line2, 
                    string zipcode, 
                    string cityId, 
                    string cityName, 
                    string cityLatitude, 
                    string cityLogitude, 
                    string localityId, 
                    string localityName, 
                    string localityLatitude, 
                    string localityLagitude, 
                    string country, 
                    string State, 
                    string userToken) {
            return base.Channel.CreateAddress(subjectId, subjectType, addressTypeId, addressSubTypeId, Line1, Line2, zipcode, cityId, cityName, cityLatitude, cityLogitude, localityId, localityName, localityLatitude, localityLagitude, country, State, userToken);
        }
        
        public Business.CoreService.Address UpdateAddress(
                    string addressId, 
                    string addressTypeId, 
                    string addressSubTypeId, 
                    string Line1, 
                    string Line2, 
                    string zipcode, 
                    string cityId, 
                    string cityName, 
                    string cityLatitude, 
                    string cityLogitude, 
                    string localityId, 
                    string localityName, 
                    string localityLatitude, 
                    string localityLagitude, 
                    string country, 
                    string State, 
                    string Status, 
                    string userToken) {
            return base.Channel.UpdateAddress(addressId, addressTypeId, addressSubTypeId, Line1, Line2, zipcode, cityId, cityName, cityLatitude, cityLogitude, localityId, localityName, localityLatitude, localityLagitude, country, State, Status, userToken);
        }
        
        public Business.CoreService.Address[] SearchAddressesByKeywords(string cityId, string addressTypeId, Business.CoreService.Subject subjectType, string[] addressSubTypeId, string userToken) {
            return base.Channel.SearchAddressesByKeywords(cityId, addressTypeId, subjectType, addressSubTypeId, userToken);
        }
        
        public Business.CoreService.UserProfile[] SearchProfileByKeywords(string cityId, string addressTypeId, string[] addressSubTypeId, string userToken) {
            return base.Channel.SearchProfileByKeywords(cityId, addressTypeId, addressSubTypeId, userToken);
        }
        
        public Business.CoreService.ResourceToken[] GetListContent(string since, string parentId, string objecttype, string userToken) {
            return base.Channel.GetListContent(since, parentId, objecttype, userToken);
        }
        
        public int DeleteRelation(string childId, string parentId, string userid, string objecttype, string userToken) {
            return base.Channel.DeleteRelation(childId, parentId, userid, objecttype, userToken);
        }
        
        public string GetMimeType(string FileName) {
            return base.Channel.GetMimeType(FileName);
        }
    }
}
